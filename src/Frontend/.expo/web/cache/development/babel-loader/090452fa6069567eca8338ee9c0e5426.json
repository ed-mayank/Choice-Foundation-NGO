{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Crs = function Crs() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      Respiratory = _useState2[0],\n      setRespiratory = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      auscultation = _useState4[0],\n      setAuscultation = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      muscles = _useState6[0],\n      setMuscles = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      mental = _useState8[0],\n      setMental = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      room = _useState10[0],\n      setRoom = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      color = _useState12[0],\n      setColor = _useState12[1];\n\n  var score = Number(Respiratory) + Number(auscultation) + Number(muscles) + Number(mental) + Number(room) + Number(color);\n  var flag = 0;\n\n  if (Number(Respiratory) >= 0 && Number(auscultation) >= 0 && Number(muscles) >= 0 && Number(mental) >= 0 && Number(room) >= 0 && Number(color) >= 0) {\n    flag = 1;\n  }\n\n  var onClickA = function onClickA(event) {\n    var newCrs = {\n      Respiratory: Respiratory,\n      auscultation: auscultation,\n      muscles: muscles,\n      mental: mental,\n      room: room,\n      color: color\n    };\n  };\n\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(Text, {\n      style: styles.prism,\n      children: \"Clinical Respiratory Score (CRS)\"\n    }), _jsxs(View, {\n      style: [styles.container1],\n      children: [_jsxs(View, {\n        style: styles.dropContainer,\n        children: [_jsx(Text, {\n          style: styles.dropdownContent,\n          children: \"i.Respiratory Rate: \"\n        }), _jsxs(Picker, {\n          selectedValue: Respiratory,\n          style: {\n            height: 50,\n            width: 150\n          },\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            return setRespiratory(itemValue);\n          },\n          children: [_jsx(Picker.Item, {\n            label: \"\",\n            value: -1\n          }), _jsx(Picker.Item, {\n            label: \"Age 1-5 years: <30\",\n            value: 0\n          }), _jsx(Picker.Item, {\n            label: \"Age 1-5 years: 30-40\",\n            value: 1\n          }), _jsx(Picker.Item, {\n            label: \"Age 1-5 years: >40\",\n            value: 2\n          }), _jsx(Picker.Item, {\n            label: \"Age > 5 years: <20\",\n            value: 0\n          }), _jsx(Picker.Item, {\n            label: \"Age > 5 years: 20-30\",\n            value: 1\n          }), _jsx(Picker.Item, {\n            label: \"Age > 5 years: >30\",\n            value: 2\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.dropContainer,\n        children: [_jsx(Text, {\n          style: styles.dropdownContent,\n          children: \"ii.Auscultation: \"\n        }), _jsxs(Picker, {\n          selectedValue: auscultation,\n          style: {\n            height: 50,\n            width: 150\n          },\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            return setAuscultation(itemValue);\n          },\n          children: [_jsx(Picker.Item, {\n            label: \"\",\n            value: -1\n          }), _jsx(Picker.Item, {\n            label: \"Good air movement, Expiratory scattered wheezing or loose rales/crackles\",\n            value: 0\n          }), _jsx(Picker.Item, {\n            label: \"Depressed air movement, inspiratory and expiratory wheezes or rales/crackles\",\n            value: 1\n          }), _jsx(Picker.Item, {\n            label: \"Diminished or absent breath sounds, severe wheezing or rales/crackles or marked prolonged expiration\",\n            value: 3\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.dropContainer,\n        children: [_jsx(Text, {\n          style: styles.dropdownContent,\n          children: \"iii. Use of Accessory Muscles: \"\n        }), _jsxs(Picker, {\n          selectedValue: muscles,\n          style: {\n            height: 50,\n            width: 150\n          },\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            return setMuscles(itemValue);\n          },\n          children: [_jsx(Picker.Item, {\n            label: \"\",\n            value: -1\n          }), _jsx(Picker.Item, {\n            label: \"Mild to no use of accessory muscles, Mild to no retractions or nasal flaring on inspiration\",\n            value: 0\n          }), _jsx(Picker.Item, {\n            label: \"Moderate intercostal retractions, mild to moderate use of accessory muscles, nasal flaring\",\n            value: 1\n          }), _jsx(Picker.Item, {\n            label: \"Severe intercostal and substernal retractions, nasal flaring\",\n            value: 2\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.dropContainer,\n        children: [_jsx(Text, {\n          style: styles.dropdownContent,\n          children: \"iv. Mental status: \"\n        }), _jsxs(Picker, {\n          selectedValue: mental,\n          style: {\n            height: 50,\n            width: 150\n          },\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            return setMental(itemValue);\n          },\n          children: [_jsx(Picker.Item, {\n            label: \"\",\n            value: -1\n          }), _jsx(Picker.Item, {\n            label: \"Normal to Mildly irratable\",\n            value: 0\n          }), _jsx(Picker.Item, {\n            label: \"Irritable, agitated restless\",\n            value: 1\n          }), _jsx(Picker.Item, {\n            label: \"Lethargic\",\n            value: 2\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.dropContainer,\n        children: [_jsx(Text, {\n          style: styles.dropdownContent,\n          children: \"v.Room Air SpO2: \"\n        }), _jsxs(Picker, {\n          selectedValue: room,\n          style: {\n            height: 50,\n            width: 150\n          },\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            return setRoom(itemValue);\n          },\n          children: [_jsx(Picker.Item, {\n            label: \"\",\n            value: -1\n          }), _jsx(Picker.Item, {\n            label: \">95%\",\n            value: 0\n          }), _jsx(Picker.Item, {\n            label: \"90-95%\",\n            value: 1\n          }), _jsx(Picker.Item, {\n            label: \"<90%\",\n            value: 2\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.dropContainer,\n        children: [_jsx(Text, {\n          style: styles.dropdownContent,\n          children: \"vi.Color: \"\n        }), _jsxs(Picker, {\n          selectedValue: color,\n          style: {\n            height: 50,\n            width: 150\n          },\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            return setColor(itemValue);\n          },\n          children: [_jsx(Picker.Item, {\n            label: \"\",\n            value: -1\n          }), _jsx(Picker.Item, {\n            label: \"Normal\",\n            value: 0\n          }), _jsx(Picker.Item, {\n            label: \"Pale to Normal\",\n            value: 1\n          }), _jsx(Picker.Item, {\n            label: \"Cyanotic, Dusky\",\n            value: 2\n          })]\n        })]\n      })]\n    }), flag == 1 && _jsx(View, {\n      style: [styles.container5],\n      children: _jsxs(View, {\n        children: [_jsxs(Text, {\n          style: styles.assessment,\n          children: [\"Score: \", score]\n        }), score <= 3 && _jsx(Text, {\n          style: styles.assessment,\n          children: \"Severity: Mild\"\n        }), score >= 4 && score <= 7 && _jsx(Text, {\n          style: styles.assessment,\n          children: \"Severity: Moderate\"\n        }), score >= 8 && score <= 12 && _jsx(Text, {\n          style: styles.assessment,\n          children: \"Severity: Severe\"\n        })]\n      })\n    }), _jsx(Pressable, {\n      style: styles.submit,\n      children: _jsx(Button, {\n        title: \"Submit\",\n        onPress: onClickAdd,\n        children: \"Add\"\n      })\n    })]\n  });\n};\n\nexport default Crs;\nvar styles = StyleSheet.create({\n  prism: {\n    fontSize: 50,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  assessment: {\n    marginTop: 20,\n    fontSize: 30,\n    fontWeight: \"bold\"\n  },\n  dropContainer: {\n    flexDirection: \"row\",\n    marginBottom: 20,\n    marginTop: 10\n  },\n  dropdownContent: {\n    fontSize: 20,\n    marginTop: 10\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    width: 200\n  },\n  text: {\n    fontWeight: \"bold\"\n  },\n  container1: {\n    backgroundColor: \"#f0ffff\",\n    paddingLeft: 20,\n    borderWidth: 2,\n    margin: 5\n  },\n  container2: {\n    backgroundColor: \"#fffacd\",\n    paddingLeft: 20,\n    borderWidth: 2,\n    margin: 5\n  },\n  container3: {\n    backgroundColor: \"#ffb6c1\",\n    paddingLeft: 20,\n    borderWidth: 2,\n    margin: 5\n  },\n  container4: {\n    backgroundColor: \"#f5f5dc\",\n    paddingLeft: 20,\n    borderWidth: 2,\n    margin: 5\n  },\n  container5: {\n    backgroundColor: \"#dda0dd\",\n    paddingLeft: 20,\n    borderWidth: 2,\n    margin: 5\n  },\n  subscore: {\n    fontWeight: \"bold\",\n    borderWidth: 1,\n    backgroundColor: \"#fff\",\n    margin: 10,\n    padding: 4,\n    fontSize: 20\n  },\n  submit: {\n    borderWidth: 2,\n    backgroundColor: \"#56BF9C\",\n    margin: 10,\n    padding: 7,\n    marginLeft: 800,\n    width: 90\n  }\n});","map":{"version":3,"sources":["/home/xenos/2ndYear/Semester_4/DASS/Project/Repo/DASS2K22-Team-48/Frontend/components/Assessment/Crs.js"],"names":["React","useState","Crs","Respiratory","setRespiratory","auscultation","setAuscultation","muscles","setMuscles","mental","setMental","room","setRoom","color","setColor","score","Number","flag","onClickA","event","newCrs","styles","prism","container1","dropContainer","dropdownContent","height","width","itemValue","itemIndex","container5","assessment","submit","onClickAdd","StyleSheet","create","fontSize","fontWeight","textAlign","marginTop","flexDirection","marginBottom","input","margin","borderWidth","padding","text","backgroundColor","paddingLeft","container2","container3","container4","subscore","marginLeft"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, SafeAreaView, Picker, TextInput, Button, Pressable } from 'react-native'\nimport React, { useState } from 'react'\n\nconst Crs = () => {\n    const [Respiratory, setRespiratory] = useState();\n    const [auscultation, setAuscultation] = useState();\n    const [muscles, setMuscles] = useState();\n    const [mental, setMental] = useState();\n    const [room, setRoom] = useState();\n    const [color, setColor] = useState();\n  \n    let score = Number(Respiratory)+ Number(auscultation)+ Number(muscles) + Number(mental)+ Number(room)+ Number(color);\n    let flag = 0\n    if (Number(Respiratory) >= 0 && Number(auscultation) >= 0 && Number(muscles) >= 0 && Number(mental) >=0 && Number(room) >= 0 && Number(color) >=0){\n      flag = 1;\n    }\n\n    const onClickA = (event) => {\n      const newCrs = {\n        Respiratory:Respiratory,\n        auscultation:auscultation,\n        muscles:muscles,\n        mental:mental,\n        room:room,\n        color:color\n      }\n    }\n    return (\n      <SafeAreaView> \n        <Text style={styles.prism}>Clinical Respiratory Score (CRS)</Text>\n        <View style={[styles.container1]}>\n          <View style={styles.dropContainer}>\n            <Text style={styles.dropdownContent}>i.Respiratory Rate: </Text>\n            <Picker\n              selectedValue={Respiratory}\n              style={{ height: 50, width: 150 }}\n              onValueChange={(itemValue, itemIndex) => setRespiratory(itemValue)}\n            >\n              <Picker.Item label=\"\" value={-1} />\n              <Picker.Item label=\"Age 1-5 years: <30\" value={0} />\n              <Picker.Item label=\"Age 1-5 years: 30-40\" value={1} />\n              <Picker.Item label=\"Age 1-5 years: >40\" value={2} />\n              <Picker.Item label=\"Age > 5 years: <20\" value={0} />\n              <Picker.Item label=\"Age > 5 years: 20-30\" value={1} />\n              <Picker.Item label=\"Age > 5 years: >30\" value={2} />\n            </Picker>\n          </View>\n          <View style={styles.dropContainer}>\n            <Text style={styles.dropdownContent}>ii.Auscultation: </Text>\n            <Picker\n              selectedValue={auscultation}\n              style={{ height: 50, width: 150 }}\n              onValueChange={(itemValue, itemIndex) => setAuscultation(itemValue)}\n            >\n              <Picker.Item label=\"\" value={-1} />              \n              <Picker.Item label=\"Good air movement, Expiratory scattered wheezing or loose rales/crackles\" value={0} />\n              <Picker.Item label=\"Depressed air movement, inspiratory and expiratory wheezes or rales/crackles\" value={1} />\n              <Picker.Item label=\"Diminished or absent breath sounds, severe wheezing or rales/crackles or marked prolonged expiration\" value={3} />\n            </Picker>\n          </View>\n          <View style={styles.dropContainer}>\n            <Text style={styles.dropdownContent}>iii. Use of Accessory Muscles: </Text>\n            <Picker\n              selectedValue={muscles}\n              style={{ height: 50, width: 150 }}\n              onValueChange={(itemValue, itemIndex) => setMuscles(itemValue)}\n            >\n              <Picker.Item label=\"\" value={-1} />\n              <Picker.Item label=\"Mild to no use of accessory muscles, Mild to no retractions or nasal flaring on inspiration\" value={0} />\n              <Picker.Item\n                label=\"Moderate intercostal retractions, mild to moderate use of accessory muscles, nasal flaring\"\n                value={1}\n              />\n              <Picker.Item label=\"Severe intercostal and substernal retractions, nasal flaring\" value={2} />\n            </Picker>\n          </View>\n          <View style={styles.dropContainer}>\n            <Text style={styles.dropdownContent}>iv. Mental status: </Text>\n            <Picker\n              selectedValue={mental}\n              style={{ height: 50, width: 150 }}\n              onValueChange={(itemValue, itemIndex) => setMental(itemValue)}\n            >\n              <Picker.Item label=\"\" value={-1} />\n              <Picker.Item label=\"Normal to Mildly irratable\" value={0} />\n              <Picker.Item\n                label=\"Irritable, agitated restless\"\n                value={1}\n              />\n              <Picker.Item label=\"Lethargic\" value={2} />\n            </Picker>\n          </View>\n          <View style={styles.dropContainer}>\n            <Text style={styles.dropdownContent}>v.Room Air SpO2: </Text>\n            <Picker\n              selectedValue={room}\n              style={{ height: 50, width: 150 }}\n              onValueChange={(itemValue, itemIndex) => setRoom(itemValue)}\n            >\n              <Picker.Item label=\"\" value={-1} />\n              <Picker.Item label=\">95%\" value={0} />\n              <Picker.Item\n                label=\"90-95%\"\n                value={1}\n              />\n              <Picker.Item label=\"<90%\" value={2} />\n            </Picker>\n          </View>\n          <View style={styles.dropContainer}>\n            <Text style={styles.dropdownContent}>vi.Color: </Text>\n            <Picker\n              selectedValue={color}\n              style={{ height: 50, width: 150 }}\n              onValueChange={(itemValue, itemIndex) => setColor(itemValue)}\n            >\n              <Picker.Item label=\"\" value={-1} />\n              <Picker.Item label=\"Normal\" value={0} />\n              <Picker.Item\n                label=\"Pale to Normal\"\n                value={1}\n              />\n              <Picker.Item label=\"Cyanotic, Dusky\" value={2} />\n            </Picker>\n          </View>\n        </View>\n        {flag == 1 && (\n        <View style={[styles.container5]}>\n          <View>\n            <Text style={styles.assessment}>\n              Score: {score}\n            </Text>\n            {score <= 3 && (\n              <Text style={styles.assessment}>Severity: Mild</Text>\n            )}\n            {score >= 4 && score <= 7 && (\n              <Text style={styles.assessment}>Severity: Moderate</Text>\n            )}\n            {score >= 8 && score <= 12 && (\n              <Text style={styles.assessment}>Severity: Severe</Text>\n            )}\n          </View>\n        </View>\n      )}\n\n      <Pressable style = {styles.submit}>\n        <Button\n          title=\"Submit\"\n          \n          onPress={onClickAdd}\n        >\n          Add\n        </Button>\n      </Pressable>\n      </SafeAreaView>\n    );\n}\n\nexport default Crs\n\nconst styles = StyleSheet.create({\n    prism: {\n      fontSize: 50,\n      fontWeight: \"bold\",\n      textAlign: \"center\",\n    },\n    assessment: {\n      marginTop: 20,\n      fontSize: 30,\n      fontWeight: \"bold\",\n    },\n    dropContainer: {\n      flexDirection: \"row\",\n      marginBottom: 20,\n      marginTop: 10,\n    },\n    dropdownContent: {\n      fontSize: 20,\n      marginTop: 10,\n    },\n    input: {\n      height: 40,\n      margin: 12,\n      borderWidth: 1,\n      padding: 10,\n      width: 200,\n    },\n    text: {\n      fontWeight: \"bold\",\n    },\n    container1: {\n      backgroundColor: \"#f0ffff\",\n      paddingLeft: 20,\n      borderWidth: 2,\n      margin: 5,\n    },\n    container2: {\n      backgroundColor: \"#fffacd\",\n      paddingLeft: 20,\n      borderWidth: 2,\n      margin: 5,\n    },\n    container3: {\n      backgroundColor: \"#ffb6c1\",\n      paddingLeft: 20,\n      borderWidth: 2,\n      margin: 5,\n    },\n    container4: {\n      backgroundColor: \"#f5f5dc\",\n      paddingLeft: 20,\n      borderWidth: 2,\n      margin: 5,\n    },\n    container5: {\n      backgroundColor: \"#dda0dd\",\n      paddingLeft: 20,\n      borderWidth: 2,\n      margin: 5,\n    },\n    subscore: {\n      fontWeight: \"bold\",\n      borderWidth: 1,\n      backgroundColor: \"#fff\",\n      margin: 10,\n      padding: 4,\n      fontSize: 20,\n    },\n    submit: {\n      borderWidth: 2,\n      backgroundColor:\"#56BF9C\",\n      margin: 10,\n      padding: 7,\n      marginLeft: 800,\n      width: 90,\n    }\n  });"]},"metadata":{},"sourceType":"module"}
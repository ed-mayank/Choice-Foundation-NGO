{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport ReviewDetails from \"./ReviewDetails\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Maindashboard = function Maindashboard(props) {\n  var initialPatients = [];\n\n  var _useState = useState(initialPatients),\n      _useState2 = _slicedToArray(_useState, 2),\n      patients = _useState2[0],\n      setPatients = _useState2[1];\n\n  var patientsList = function patientsList() {\n    var result, data, p_list;\n    return _regeneratorRuntime.async(function patientsList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://devapi.igzolt.in/index.php/Api/ip_patients_list1', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                \"start\": \"1\",\n                \"limit\": \"1\",\n                \"ser_hospitalid\": \"3\",\n                \"sear_umr_no\": \"\",\n                \"sear_ip_no\": \"\",\n                \"sear_patient\": \"\",\n                \"sear_admission_date\": \"\",\n                \"sear_consult_doctor\": \"\",\n                \"sear_sponser\": \"\",\n                \"admission_date_order\": \"\",\n                \"doctor_name_order\": \"\",\n                \"ipno_order\": \"\",\n                \"sponser_order\": \"\",\n                \"sear_ptmid\": \"\"\n              })\n            }));\n\n          case 2:\n            result = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(result.json());\n\n          case 5:\n            data = _context.sent;\n            p_list = data.data;\n            console.log(\"data is :\");\n            console.log(p_list);\n            console.log(p_list[1]);\n            console.log(typeof p_list[1]);\n            setPatients(p_list);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    patientsList();\n  });\n  var navigate = useNavigate();\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      onChangeName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      age = _useState8[0],\n      onChangeAge = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      gender = _useState10[0],\n      onChangeGender = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      patientIp = _useState12[0],\n      onChangePatientIp = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      date = _useState14[0],\n      onChangeDate = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      time = _useState16[0],\n      onChangeTime = _useState16[1];\n\n  var resetInputs = function resetInputs() {\n    onChangeName(\"\");\n    onChangeAge(\"\");\n    onChangeGender(\"\");\n    onChangePatientIp(\"\");\n    onChangeDate(\"\");\n    onChangeTime(\"\");\n  };\n\n  var addPatient = function addPatient(name, age, gender, patientID, date, time, emailId, address, city, stateCountry, pincode, country, status, title) {\n    var response, data;\n    return _regeneratorRuntime.async(function addPatient$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://devapi.igzolt.in/index.php/v1/patient/registerPatient', {\n              method: 'POST',\n              body: JSON.stringify({\n                name: name,\n                age: age,\n                gender: gender,\n                patientID: patientID,\n                date: date,\n                time: time,\n                emailId: emailId,\n                address: address,\n                city: city,\n                stateCountry: stateCountry,\n                pincode: pincode,\n                country: country,\n                status: status,\n                title: title\n              })\n            }));\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            data = _context2.sent;\n            console.log(data);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSubmit = function onSubmit(event) {\n    setModalVisible(!modalVisible);\n    event.preventDefault();\n    var newPatient = {\n      name: name,\n      age: age,\n      gender: gender,\n      patientID: patientIp,\n      date: date,\n      time: time,\n      address: \"\",\n      emailId: \"\",\n      city: \"\",\n      stateCountry: \"\",\n      pincode: \"\",\n      country: \"INDIA\",\n      status: \"\",\n      title: \"\"\n    };\n    console.log(newPatient);\n    addPatient(newPatient.name, newPatient.age, newPatient.gender, newPatient.patientID, newPatient.date, newPatient.time, newPatient.address, newPatient.emailId, newPatient.city, newPatient.stateCountry, newPatient.pincode, newPatient.country, newPatient.status, newPatient.title);\n    resetInputs();\n  };\n\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(Modal, {\n      animationType: \"fade\",\n      transparent: true,\n      visible: modalVisible,\n      children: _jsxs(View, {\n        style: styles.centeredView,\n        children: [_jsx(Text, {\n          children: \"Patient Name\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangeName,\n          value: name,\n          placeholder: \"Patient Name\",\n          keyboardType: \"ascii-capable\"\n        }), _jsx(Text, {\n          children: \"Age\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangeAge,\n          value: age,\n          placeholder: \"Patient Age\",\n          keyboardType: \"numeric\"\n        }), _jsx(Text, {\n          children: \"Gender\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangeGender,\n          value: gender,\n          placeholder: \"Gender\",\n          keyboardType: \"ascii-capable\"\n        }), _jsx(Text, {\n          children: \"Patient IP\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangePatientIp,\n          value: patientIp,\n          placeholder: \"Patient IP\",\n          keyboardType: \"ascii-capable\"\n        }), _jsx(Text, {\n          children: \"Time of Admission\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangeDate,\n          value: date,\n          placeholder: \"Date of Admission(YYYY-MM-DD)\",\n          keyboardType: \"decimal-pad\"\n        }), _jsx(Text, {\n          children: \"Time of Admission\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangeTime,\n          value: time,\n          placeholder: \"Time of Admission\",\n          keyboardType: \"decimal-pad\"\n        }), _jsx(Pressable, {\n          children: _jsx(Button, {\n            title: \"submit\",\n            style: styles.buttonOpen,\n            onPress: onSubmit,\n            children: \"Register\"\n          })\n        })]\n      })\n    }), _jsx(Text, {\n      children: _jsx(Pressable, {\n        children: _jsx(Icon.Button, {\n          name: \"plus\",\n          style: styles.buttonOpen,\n          onPress: function onPress() {\n            return setModalVisible(true);\n          },\n          children: \"Add New Patient\"\n        })\n      })\n    }), _jsx(Text, {\n      children: _jsx(Pressable, {\n        children: _jsx(Icon.Button, {\n          name: \"search\",\n          style: styles.buttonSearch,\n          children: \"Search Patient\"\n        })\n      })\n    }), patients.map(function (patient) {\n      return _jsx(ReviewDetails, {\n        patient: patient\n      }, patient.P_ID);\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    margin: 50,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.75,\n    shadowRadius: 4,\n    elevation: 15\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  buttonOpen: {\n    backgroundColor: \"#56BF9C\"\n  },\n  buttonSearch: {\n    backgroundColor: \"#569ebf\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 5\n  }\n});\nexport default Maindashboard;","map":{"version":3,"sources":["/home/xenos/2ndYear/Semester_4/DASS/Project/Repo/DASS2K22-Team-48/Frontend/components/Maindashboard.js"],"names":["React","useContext","useEffect","useState","useNavigate","Icon","ReviewDetails","Maindashboard","props","initialPatients","patients","setPatients","patientsList","fetch","method","headers","body","JSON","stringify","result","json","data","p_list","console","log","navigate","modalVisible","setModalVisible","name","onChangeName","age","onChangeAge","gender","onChangeGender","patientIp","onChangePatientIp","date","onChangeDate","time","onChangeTime","resetInputs","addPatient","patientID","emailId","address","city","stateCountry","pincode","country","status","title","response","onSubmit","event","preventDefault","newPatient","styles","centeredView","input","buttonOpen","buttonSearch","map","patient","P_ID","StyleSheet","create","flex","margin","backgroundColor","borderRadius","padding","alignItems","justifyContent","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","modalView","borderWidth"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport {\n    Alert,\n    Button,\n    ImageBackground,\n    StyleSheet,\n    Modal,\n    Text,\n    Pressable,\n    View,\n    SafeAreaView,\n    TextInput\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport ReviewDetails from './ReviewDetails';\n\n\n\n\nconst Maindashboard = (props) => {\n    // const context = useContext(PatientContext);\n    // const { patients, addPatient } = context;\n    const initialPatients = [];\n    const [patients, setPatients] = useState(initialPatients);\n    const patientsList = async () => {\n        const result = await fetch('https://devapi.igzolt.in/index.php/Api/ip_patients_list1',\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    \"start\": \"1\",\n                    \"limit\": \"1\",\n                    \"ser_hospitalid\": \"3\",\n                    \"sear_umr_no\": \"\",\n                    \"sear_ip_no\": \"\",\n                    \"sear_patient\": \"\",\n                    \"sear_admission_date\": \"\",\n                    \"sear_consult_doctor\": \"\",\n                    \"sear_sponser\": \"\",\n                    \"admission_date_order\": \"\",\n                    \"doctor_name_order\": \"\",\n                    \"ipno_order\": \"\",\n                    \"sponser_order\": \"\",\n                    \"sear_ptmid\": \"\"\n                })\n            })\n        const data = await result.json();\n        const p_list = data.data\n        console.log(\"data is :\")\n        console.log(p_list)\n        console.log(p_list[1])\n        console.log(typeof p_list[1])\n        setPatients(p_list);\n    }\n    useEffect(() => {\n        patientsList();\n    })\n\n    const navigate = useNavigate();\n\n    const [modalVisible, setModalVisible] = useState(false);\n    const [name, onChangeName] = useState(\"\");\n    const [age, onChangeAge] = useState(\"\")\n    const [gender, onChangeGender] = useState(\"\")\n    const [patientIp, onChangePatientIp] = useState(\"\")\n    const [date, onChangeDate] = useState(\"\");\n    const [time, onChangeTime] = useState(\"\");\n\n    const resetInputs = () => {\n        onChangeName(\"\");\n        onChangeAge(\"\");\n        onChangeGender(\"\");\n        onChangePatientIp(\"\");\n        onChangeDate(\"\");\n        onChangeTime(\"\");\n    };\n\n    const addPatient = async (name, age, gender, patientID,\n        date, time, emailId, address, city, stateCountry,\n        pincode, country, status, title) => {\n\n        const response = await fetch('https://devapi.igzolt.in/index.php/v1/patient/registerPatient', {\n            method: 'POST',\n            // headers: {\n            //     'Content-Type': 'application/json',\n            // },\n            body: JSON.stringify({\n                name, age, gender, patientID,\n                date, time, emailId, address, city, stateCountry,\n                pincode, country, status, title\n            })\n            // body data type must match \"Content-Type\" header\n        });\n        const data = await response.json();\n        console.log(data);\n    }\n\n    const onSubmit = (event) => {\n        setModalVisible(!modalVisible)\n        event.preventDefault();\n\n        const newPatient = {\n            name: name,\n            age: age,\n            gender: gender,\n            patientID: patientIp,\n            date: date,\n            time: time,\n            // createDateTime: \"2022-04-18 10:24:28\",\n\n            address: \"\",\n            emailId: \"\",\n            city: \"\",\n            stateCountry: \"\",\n            pincode: \"\",\n            country: \"INDIA\",\n            status: \"\",\n            title: \"\"\n\n            // createId: \"\",\n            // dateOfBirth: \"2015-04-17\",\n            // familyGroupId: \"\",\n            // familyGroupRegistration: \"\",\n            // identityIdNr: \"\",\n            // identityType: \"\",\n            // mobileNumber: 999999999,\n            // nextOfKin1Mobilenr: null,\n            // nextOfKin1Name: \"\",\n            // nextOfKin1Relation: \"\",\n            // nextOfKinMobilenr: 999999999,\n            // nextOfKinName: \"Ramu\",\n            // nextOfKinRelation: \"Father\",\n            // patientID: 0,\n            // firstName: \"\",\n            // lastName: \"\",\n            // permanentHomeAddress: \"\",\n            // regDate: \"2022-04-18\"\n\n        }\n        console.log(newPatient);\n        // console.log(initialPatients);\n\n        // APi for post TBD\n        // post patient to backend\n        addPatient(\n            newPatient.name,\n            newPatient.age,\n            newPatient.gender,\n            newPatient.patientID,\n            newPatient.date,\n            newPatient.time,\n            newPatient.address,\n\n            newPatient.emailId,\n\n            newPatient.city,\n            newPatient.stateCountry,\n            newPatient.pincode,\n            newPatient.country,\n            newPatient.status,\n            newPatient.title\n        );\n        resetInputs();\n    };\n\n\n    return (\n        <SafeAreaView >\n            <Modal\n                animationType=\"fade\"\n                transparent={true}\n                visible={modalVisible}\n            // onRequestClose={() => {\n            //     Alert.alert(\"Modal has been closed.\");\n            //     setModalVisible(!modalVisible);\n            // }}\n            >\n                <View\n                    style={styles.centeredView}\n                >\n                    <Text>Patient Name</Text>\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangeName}\n                        value={name}\n                        placeholder=\"Patient Name\"\n                        keyboardType=\"ascii-capable\"\n                    />\n                    <Text>Age</Text>\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangeAge}\n                        value={age}\n                        placeholder=\"Patient Age\"\n                        keyboardType=\"numeric\"\n                    />\n                    <Text>Gender</Text>\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangeGender}\n                        value={gender}\n                        placeholder=\"Gender\"\n                        keyboardType=\"ascii-capable\"\n                    />\n                    <Text>Patient IP</Text>\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangePatientIp}\n                        value={patientIp}\n                        placeholder=\"Patient IP\"\n                        keyboardType=\"ascii-capable\"\n                    />\n                    <Text>Time of Admission</Text>\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangeDate}\n                        value={date}\n                        placeholder=\"Date of Admission(YYYY-MM-DD)\"\n                        keyboardType=\"decimal-pad\"\n                    />\n                    <Text>Time of Admission</Text>\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangeTime}\n                        value={time}\n                        placeholder=\"Time of Admission\"\n                        keyboardType=\"decimal-pad\"\n                    />\n                    <Pressable>\n                        <Button\n                            title=\"submit\"\n                            style={styles.buttonOpen}\n                            onPress={onSubmit}\n                        // onPress={() => console.log(\"HAHAHHA\")}\n                        >\n                            Register\n                        </Button>\n                    </Pressable>\n\n                </View>\n            </Modal >\n            <Text>\n                <Pressable>\n                    <Icon.Button\n                        name=\"plus\"\n                        style={styles.buttonOpen}\n                        onPress={() => setModalVisible(true)}\n                    >\n                        Add New Patient\n                    </Icon.Button>\n                </Pressable>\n            </Text>\n            <Text>\n                <Pressable>\n                    <Icon.Button\n                        name=\"search\"\n                        style={styles.buttonSearch}\n                    // onPress={() => navigate(\"/Patient_id\")}\n                    // onPress={() =>\n                    //     patientsList()\n                    //     // <TextInput placeholder='Patient ID' />\n                    // }\n                    >\n                        Search Patient\n                    </Icon.Button>\n                </Pressable>\n            </Text>\n\n\n            {patients.map((patient) => {\n                return < ReviewDetails key={patient.P_ID} patient={patient} />\n            })\n            }\n        </SafeAreaView >\n    );\n}\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        margin: 50,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 15,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 5\n        },\n        shadowOpacity: 0.75,\n        shadowRadius: 4,\n        elevation: 15\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n    },\n    buttonOpen: {\n        backgroundColor: \"#56BF9C\",\n    },\n    buttonSearch: {\n        backgroundColor: \"#569ebf\",\n    },\n    input: {\n        height: 40,\n        margin: 12,\n        borderWidth: 1,\n        padding: 5,\n    }\n});\n\nexport default Maindashboard;\n"]},"metadata":{},"sourceType":"module"}
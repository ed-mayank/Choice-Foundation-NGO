{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport ReviewDetails from \"./ReviewDetails\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialPatients = [{\n  name: 'John',\n  age: 8,\n  gender: 'Male',\n  patientIp: '21b23',\n  date: '20/02/22',\n  time: '22:13'\n}, {\n  name: 'Aarna',\n  age: 4,\n  gender: 'Female',\n  patientIp: '21g23',\n  date: '17/02/22',\n  time: '20:03'\n}, {\n  name: 'Binita',\n  age: 7,\n  gender: 'Female',\n  patientIp: '21g24',\n  date: '02/03/22',\n  time: '12:57'\n}, {\n  name: 'Aagam',\n  age: 11,\n  gender: 'Male',\n  patientIp: '21b38',\n  date: '5/03/24',\n  time: '11:39'\n}];\n\nfunction Maindashboard(props) {\n  var navigate = useNavigate();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      onChangeName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      age = _useState6[0],\n      onChangeAge = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      gender = _useState8[0],\n      onChangeGender = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      patientIp = _useState10[0],\n      onChangePatientIp = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      date = _useState12[0],\n      onChangeDate = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      time = _useState14[0],\n      onChangeTime = _useState14[1];\n\n  var resetInputs = function resetInputs() {\n    onChangeName(\"\");\n    onChangeAge(\"\");\n    onChangeGender(\"\");\n    onChangePatientIp(\"\");\n    onChangeDate(\"\");\n    onChangeTime(\"\");\n  };\n\n  var onSubmit = function onSubmit(event) {\n    setModalVisible(!modalVisible);\n    event.preventDefault();\n    var newPatient = {\n      name: name,\n      age: age,\n      gender: gender,\n      patientIp: patientIp,\n      date: date,\n      time: time\n    };\n    console.log(newPatient);\n    resetInputs();\n  };\n\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(Modal, {\n      animationType: \"fade\",\n      transparent: true,\n      visible: modalVisible,\n      children: _jsxs(View, {\n        style: styles.centeredView,\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangeName,\n          value: name,\n          placeholder: \"Patient Name\",\n          keyboardType: \"ascii-capable\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangeAge,\n          value: age,\n          placeholder: \"Patient Age\",\n          keyboardType: \"numeric\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangeGender,\n          value: gender,\n          placeholder: \"Gender\",\n          keyboardType: \"ascii-capable\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangePatientIp,\n          value: patientIp,\n          placeholder: \"Patient IP\",\n          keyboardType: \"ascii-capable\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangeDate,\n          value: date,\n          placeholder: \"Date of Admission\",\n          keyboardType: \"decimal-pad\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangeTime,\n          value: time,\n          placeholder: \"Time of Admission\",\n          keyboardType: \"decimal-pad\"\n        }), _jsx(Pressable, {\n          children: _jsx(Button, {\n            title: \"submit\",\n            style: styles.buttonOpen,\n            onPress: onSubmit,\n            children: \"Register\"\n          })\n        })]\n      })\n    }), _jsx(Text, {\n      children: _jsx(Pressable, {\n        children: _jsx(Icon.Button, {\n          name: \"plus\",\n          style: styles.buttonOpen,\n          onPress: function onPress() {\n            return setModalVisible(true);\n          },\n          children: \"Add New Patient\"\n        })\n      })\n    }), _jsx(Text, {\n      children: _jsx(Pressable, {\n        children: _jsx(Icon.Button, {\n          name: \"search\",\n          style: styles.buttonSearch,\n          onPress: function onPress() {\n            return navigate(\"/Patient_id\");\n          },\n          children: \"Search Patient\"\n        })\n      })\n    }), initialPatients.map(function (patient) {\n      return _jsx(ReviewDetails, {\n        patient: patient\n      }, patient.patientIp);\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    margin: 50,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.75,\n    shadowRadius: 4,\n    elevation: 15\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  buttonOpen: {\n    backgroundColor: \"#56BF9C\"\n  },\n  buttonSearch: {\n    backgroundColor: \"#569ebf\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});\nexport default Maindashboard;","map":{"version":3,"sources":["/home/xenos/2ndYear/Semester_4/DASS/Project/Repo/DASS2K22-Team-48/Frontend/components/Maindashboard.js"],"names":["React","useContext","useState","useNavigate","Icon","ReviewDetails","initialPatients","name","age","gender","patientIp","date","time","Maindashboard","props","navigate","modalVisible","setModalVisible","onChangeName","onChangeAge","onChangeGender","onChangePatientIp","onChangeDate","onChangeTime","resetInputs","onSubmit","event","preventDefault","newPatient","console","log","styles","centeredView","input","buttonOpen","buttonSearch","map","patient","StyleSheet","create","flex","margin","backgroundColor","borderRadius","padding","alignItems","justifyContent","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","modalView","borderWidth"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport {\n    Alert,\n    Button,\n    ImageBackground,\n    StyleSheet,\n    Modal,\n    Text,\n    Pressable,\n    View,\n    SafeAreaView,\n    TextInput\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport ReviewDetails from './ReviewDetails';\n\nconst initialPatients = [\n    {\n        name: 'John',\n        age: 8,\n        gender: 'Male',\n        patientIp: '21b23',\n        date: '20/02/22',\n        time: '22:13'\n    },\n    {\n        name: 'Aarna',\n        age: 4,\n        gender: 'Female',\n        patientIp: '21g23',\n        date: '17/02/22',\n        time: '20:03'\n    },\n    {\n        name: 'Binita',\n        age: 7,\n        gender: 'Female',\n        patientIp: '21g24',\n        date: '02/03/22',\n        time: '12:57'\n    },\n    {\n        name: 'Aagam',\n        age: 11,\n        gender: 'Male',\n        patientIp: '21b38',\n        date: '5/03/24',\n        time: '11:39'\n    },\n]\n\nfunction Maindashboard(props) {\n    const navigate =useNavigate();\n\n    const [modalVisible, setModalVisible] = useState(false);\n    const [name, onChangeName] = useState(\"\");\n    const [age, onChangeAge] = useState(\"\")\n    const [gender, onChangeGender] = useState(\"\")\n    const [patientIp, onChangePatientIp] = useState(\"\")\n    const [date, onChangeDate] = useState(\"\");\n    const [time, onChangeTime] = useState(\"\");\n\n    const resetInputs = () => {\n        onChangeName(\"\");\n        onChangeAge(\"\");\n        onChangeGender(\"\");\n        onChangePatientIp(\"\");\n        onChangeDate(\"\");\n        onChangeTime(\"\");\n    };\n\n    const onSubmit = (event) => {\n        setModalVisible(!modalVisible)\n        event.preventDefault();\n\n        const newPatient = {\n            name: name,\n            age: age,\n            gender: gender,\n            patientIp: patientIp,\n            date: date,\n            time: time\n        }\n        console.log(newPatient);\n        // console.log(initialPatients);\n\n        // APi for post TBD\n        // post patient to backend\n\n        resetInputs();\n    };\n\n\n    return (\n        <SafeAreaView >\n            <Modal\n                animationType=\"fade\"\n                transparent={true}\n                visible={modalVisible}\n            // onRequestClose={() => {\n            //     Alert.alert(\"Modal has been closed.\");\n            //     setModalVisible(!modalVisible);\n            // }}\n            >\n                <View\n                    style={styles.centeredView}\n                >\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangeName}\n                        value={name}\n                        placeholder=\"Patient Name\"\n                        keyboardType=\"ascii-capable\"\n                    />\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangeAge}\n                        value={age}\n                        placeholder=\"Patient Age\"\n                        keyboardType=\"numeric\"\n                    />\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangeGender}\n                        value={gender}\n                        placeholder=\"Gender\"\n                        keyboardType=\"ascii-capable\"\n                    />\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangePatientIp}\n                        value={patientIp}\n                        placeholder=\"Patient IP\"\n                        keyboardType=\"ascii-capable\"\n                    />\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangeDate}\n                        value={date}\n                        placeholder=\"Date of Admission\"\n                        keyboardType=\"decimal-pad\"\n                    />\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangeTime}\n                        value={time}\n                        placeholder=\"Time of Admission\"\n                        keyboardType=\"decimal-pad\"\n                    />\n                    <Pressable>\n                        <Button\n                            title=\"submit\"\n                            style={styles.buttonOpen}\n                            onPress={onSubmit}\n                        // onPress={() => console.log(\"HAHAHHA\")}\n                        >\n                            Register\n                        </Button>\n                    </Pressable>\n\n                </View>\n            </Modal >\n            <Text>\n            <Pressable>\n                <Icon.Button\n                    name=\"plus\"\n                    style={styles.buttonOpen}\n                    onPress={() => setModalVisible(true)}\n                >\n                    Add New Patient\n                </Icon.Button>\n            </Pressable>\n            </Text>\n            <Text>\n            <Pressable>\n                <Icon.Button\n                    name=\"search\"\n                    style={styles.buttonSearch}\n                    onPress={() => navigate(\"/Patient_id\")}\n                >\n                    Search Patient\n                </Icon.Button>\n            </Pressable>\n            </Text>\n\n            {initialPatients.map((patient) => {\n                return < ReviewDetails key={patient.patientIp} patient={patient} />\n            })\n            }\n        </SafeAreaView >\n    );\n}\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        margin: 50,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 15,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 5\n        },\n        shadowOpacity: 0.75,\n        shadowRadius: 4,\n        elevation: 15\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n    },\n    buttonOpen: {\n        backgroundColor: \"#56BF9C\",\n    },\n    buttonSearch: {\n        backgroundColor: \"#569ebf\",\n    },\n    input: {\n        height: 40,\n        margin: 12,\n        borderWidth: 1,\n        padding: 10,\n    }\n});\n\nexport default Maindashboard;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigate } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login() {\n  var Navigate = useNavigate();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var authenticate = function authenticate() {\n    var requestOptions, result, data;\n    return _regeneratorRuntime.async(function authenticate$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            requestOptions = {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username: username,\n                password: password,\n                hospitalID: \"dpmta\"\n              })\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://devapi.igzolt.in/index.php/v1/authentication/login', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username: username,\n                password: password,\n                hospitalID: \"dpmta\"\n              })\n            }));\n\n          case 3:\n            result = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(result.json());\n\n          case 6:\n            data = _context.sent;\n            console.log(\"result.status\");\n            console.log(result.status);\n            console.log(data.status);\n\n            if (result.status === 200) {\n              Navigate('/User_id/Dashboard');\n            }\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      placeholder: \"Email\",\n      style: styles.inputStyle,\n      onChangeText: function onChangeText(username) {\n        setUsername(username);\n      }\n    }), _jsx(TextInput, {\n      secureTextEntry: true,\n      placeholder: \"Password\",\n      style: styles.inputStyle,\n      onChangeText: function onChangeText(password) {\n        setPassword(password);\n      }\n    }), _jsx(Pressable, {\n      onPress: authenticate,\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonLabel,\n        children: \"Login\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  formLabel: {\n    fontSize: 20,\n    color: '#fff'\n  },\n  inputStyle: {\n    marginTop: 20,\n    width: 300,\n    height: 40,\n    paddingHorizontal: 10,\n    borderRadius: 50,\n    backgroundColor: '#DCDCDC'\n  },\n  formText: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: '#fff',\n    fontSize: 20\n  },\n  text: {\n    color: '#fff',\n    fontSize: 20\n  },\n  button: {\n    marginTop: 20,\n    paddingHorizontal: 10,\n    borderRadius: 50,\n    width: 300,\n    height: 40,\n    alignItems: 'center'\n  },\n  buttonLabel: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'blue'\n  }\n});\nexport default Login;","map":{"version":3,"sources":["/home/shera/Desktop/DASS_1/Project/DASS2K22-Team-48/src/Frontend/components/Login.js"],"names":["useNavigate","React","useState","Login","Navigate","username","setUsername","password","setPassword","authenticate","requestOptions","method","headers","Accept","body","JSON","stringify","hospitalID","fetch","result","json","data","console","log","status","styles","container","inputStyle","button","buttonLabel","StyleSheet","create","flex","alignItems","justifyContent","formLabel","fontSize","color","marginTop","width","height","paddingHorizontal","borderRadius","backgroundColor","formText","text","fontWeight"],"mappings":"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","sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  SafeAreaView,\n  Pressable,\n  Alert,\n} from 'react-native';\n\nconst Login = () => {\n  const Navigate = useNavigate()\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const authenticate = async () => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { Accept: 'application/json', 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n        hospitalID: \"dpmta\"\n      })\n    };\n\n    const result = await fetch('https://devapi.igzolt.in/index.php/v1/authentication/login',\n      {\n        method: 'POST',\n        headers: { Accept: 'application/json', 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          username: username,\n          password: password,\n          hospitalID: \"dpmta\"\n        })\n      })\n    const data = await result.json();\n    console.log(\"result.status\")\n    console.log(result.status)\n    // console.log(\"data\")\n    // console.log(data)\n    console.log(data.status)\n    if (result.status === 200) {\n      Navigate('/User_id/Dashboard')\n    }\n    // else if (data.status === \"Fail\") {\n    //   console.log(\"wrong\")\n    //   Alert.alert(\"Invalid credentials\");\n    // }\n\n  \n  }\n  return (\n    <SafeAreaView style={styles.container}>\n      <TextInput\n        placeholder=\"Email\"\n        style={styles.inputStyle}\n        onChangeText={(username) => {\n          setUsername(username);\n        }}\n      />\n      <TextInput\n        secureTextEntry={true}\n        placeholder=\"Password\"\n        style={styles.inputStyle}\n        onChangeText={(password) => {\n          setPassword(password);\n        }}\n      />\n      <Pressable onPress={authenticate} style={styles.button}>\n        <Text style={styles.buttonLabel}>Login</Text>\n      </Pressable>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  formLabel: {\n    fontSize: 20,\n    color: '#fff',\n  },\n  inputStyle: {\n    marginTop: 20,\n    width: 300,\n    height: 40,\n    paddingHorizontal: 10,\n    borderRadius: 50,\n    backgroundColor: '#DCDCDC',\n  },\n  formText: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: '#fff',\n    fontSize: 20,\n  },\n  text: {\n    color: '#fff',\n    fontSize: 20,\n  },\n  button: {\n    marginTop: 20,\n    paddingHorizontal: 10,\n    // paddingVertical: 6,\n    borderRadius: 50,\n    // backgroundColor: 'oldlace',\n    // marginHorizontal: '1%',\n    // marginBottom: 6,\n    // minWidth: '48%',\n    width: 300,\n    height: 40,\n    // textAlign: 'center',\n    alignItems: 'center',\n  },\n  buttonLabel: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'blue',\n  },\n});\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}
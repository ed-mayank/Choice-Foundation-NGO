{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GetP_id() {\n  var c = 0;\n  var index = 0;\n  var path = location.pathname;\n\n  for (var i = 0; i < path.length; i++) {\n    if (path.charAt(i) == '/') {\n      c++;\n    }\n\n    if (c == 3) {\n      index = i;\n      break;\n    }\n\n    if (c == 2) {\n      index = path.length;\n    }\n  }\n\n  return path.substring(12, index);\n}\n\nvar Profile = function Profile() {\n  var location = useLocation();\n  var p_id = GetP_id();\n  var initialPatients = [];\n\n  var _useState = useState(initialPatients),\n      _useState2 = _slicedToArray(_useState, 2),\n      patients = _useState2[0],\n      setPatients = _useState2[1];\n\n  var _useState3 = useState(initialPatients),\n      _useState4 = _slicedToArray(_useState3, 2),\n      patient = _useState4[0],\n      setPatient = _useState4[1];\n\n  var patientsList = function patientsList() {\n    var result, data, p_list;\n    return _regeneratorRuntime.async(function patientsList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://devapi.igzolt.in/index.php/Api/ip_patients_list1', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                \"start\": \"1\",\n                \"limit\": \"20\",\n                \"ser_hospitalid\": \"3\",\n                \"sear_umr_no\": \"\",\n                \"sear_ip_no\": \"\",\n                \"sear_patient\": \"\",\n                \"sear_admission_date\": \"\",\n                \"sear_consult_doctor\": \"\",\n                \"sear_sponser\": \"\",\n                \"admission_date_order\": \"\",\n                \"doctor_name_order\": \"\",\n                \"ipno_order\": \"\",\n                \"sponser_order\": \"\",\n                \"sear_ptmid\": \"\"\n              })\n            }));\n\n          case 2:\n            result = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(result.json());\n\n          case 5:\n            data = _context.sent;\n            p_list = data.data;\n            setPatients(p_list);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    patientsList();\n  }, []);\n  var i = 0;\n\n  for (i = 0; i < patients.length; i++) {\n    if (patients[i].P_ID == p_id) {\n      break;\n    }\n  }\n\n  if (patients[i]) {\n    return _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsxs(Text, {\n        style: styles.textStyle,\n        children: [\"Name: \", patients[i].PATIENT_NAME]\n      }), _jsxs(Text, {\n        style: styles.textStyle,\n        children: [\"IP Number: \", patients[i].P_ID]\n      }), _jsxs(Text, {\n        style: styles.textStyle,\n        children: [\"Date of Admission: \", patients[i].IP_ADMISSION_DATE]\n      }), _jsxs(Text, {\n        style: styles.textStyle,\n        children: [\"Time of Admission: \", patients[i].IP_ADMISSION_TIME]\n      }), _jsxs(Text, {\n        style: styles.textStyle,\n        children: [\"Age: \", patients[i].AGE]\n      }), _jsxs(Text, {\n        style: styles.textStyle,\n        children: [\"Gender: \", patients[i].GENDER]\n      })]\n    });\n  } else {\n    return _jsx(SafeAreaView, {\n      style: styles.container\n    });\n  }\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textStyle: {\n    flex: 1,\n    marginTop: 20,\n    width: 500,\n    height: 40,\n    fontSize: 20,\n    fontWeight: \"bold\",\n    paddingHorizontal: 10,\n    spacing: 40\n  }\n});\nexport default Profile;","map":{"version":3,"sources":["/home/mayank/DASSProject/DASS2K22-Team-48/src/Frontend/components/ProfilePatient.js"],"names":["React","useContext","useEffect","useState","useNavigate","useParams","useLocation","GetP_id","c","index","path","location","pathname","i","length","charAt","substring","Profile","p_id","initialPatients","patients","setPatients","patient","setPatient","patientsList","fetch","method","headers","body","JSON","stringify","result","json","data","p_list","P_ID","styles","container","textStyle","PATIENT_NAME","IP_ADMISSION_DATE","IP_ADMISSION_TIME","AGE","GENDER","StyleSheet","create","flex","alignItems","justifyContent","marginTop","width","height","fontSize","fontWeight","paddingHorizontal","spacing"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\n\nimport {\n    StyleSheet,\n    Text,\n    SafeAreaView,\n} from 'react-native';\n\nfunction GetP_id() {\n\n    var c = 0;\n    var index = 0\n    var path = location.pathname\n    for (var i = 0; i < path.length; i++) {\n        if (path.charAt(i) == '/') {\n            c++;\n        }\n        if (c == 3) {\n            index = i\n            break;\n        }\n        if (c == 2) {\n            index = path.length;\n        }\n    }\n    return path.substring(12, index)\n}\n\nconst Profile = () => {\n    const location = useLocation()\n    var p_id = GetP_id();\n\n    const initialPatients = [];\n    // const t_Patient = [];\n    const [patients, setPatients] = useState(initialPatients);\n    const [patient, setPatient] = useState(initialPatients);\n    const patientsList = async () => {\n        const result = await fetch('https://devapi.igzolt.in/index.php/Api/ip_patients_list1',\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    \"start\": \"1\",\n                    \"limit\": \"20\",\n                    \"ser_hospitalid\": \"3\",\n                    \"sear_umr_no\": \"\",\n                    \"sear_ip_no\": \"\",\n                    \"sear_patient\": \"\",\n                    \"sear_admission_date\": \"\",\n                    \"sear_consult_doctor\": \"\",\n                    \"sear_sponser\": \"\",\n                    \"admission_date_order\": \"\",\n                    \"doctor_name_order\": \"\",\n                    \"ipno_order\": \"\",\n                    \"sponser_order\": \"\",\n                    \"sear_ptmid\": \"\"\n                })\n            })\n        const data = await result.json();\n        const p_list = data.data\n        // console.log(p_list);\n        setPatients(p_list);\n    }\n    useEffect(() => {\n        // console.log(\"api\")\n        patientsList();\n        // console.log(\"hah\")\n    }, []);\n\n    var i = 0;\n    for (i = 0; i < patients.length; i++) {\n        // console.log(patients[i].P_ID)\n        if (patients[i].P_ID == p_id) {\n            break;\n        }\n    }\n\n    if (patients[i]) {\n        return (\n            <SafeAreaView style={styles.container}>\n                <Text style={styles.textStyle}>Name: {patients[i].PATIENT_NAME}</Text>\n                <Text style={styles.textStyle}>IP Number: {patients[i].P_ID}</Text>\n                <Text style={styles.textStyle}>Date of Admission: {patients[i].IP_ADMISSION_DATE}</Text>\n                <Text style={styles.textStyle}>Time of Admission: {patients[i].IP_ADMISSION_TIME}</Text>\n                <Text style={styles.textStyle}>Age: {patients[i].AGE}</Text>\n                <Text style={styles.textStyle}>Gender: {patients[i].GENDER}</Text>\n            </SafeAreaView>\n        )\n    }\n    else {\n        return (\n            <SafeAreaView style={styles.container}>\n                {/* <Text style={styles.textStyle}>Name: {patients[i].P_ID}</Text>\n                <Text style={styles.textStyle}>IP Number: sdjhk</Text>\n                <Text style={styles.textStyle}>Date of Admission: DD/MM/YY</Text>\n                <Text style={styles.textStyle}>Time of Admission: HH:MM</Text>\n                <Text style={styles.textStyle}>Age: xx</Text>\n                <Text style={styles.textStyle}>Gender: M/F/Others</Text> */}\n            </SafeAreaView>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    textStyle: {\n        flex: 1,\n        marginTop: 20,\n        width: 500,\n        height: 40,\n        fontSize: 20,\n        fontWeight: \"bold\",\n        paddingHorizontal: 10,\n        spacing: 40,\n    },\n})\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}
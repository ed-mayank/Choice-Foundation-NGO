{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport axios from 'axios';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ReviewDetails(props) {\n  var patient = props.patient;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      str = _useState2[0],\n      setStr = _useState2[1];\n\n  var navigate = useNavigate();\n  return _jsxs(View, {\n    style: styles.card,\n    children: [_jsx(View, {\n      style: styles.cardContent,\n      children: _jsxs(Text, {\n        children: [\"PatientID : \", patient.P_id]\n      })\n    }), _jsxs(View, {\n      style: styles.cardContent,\n      children: [_jsxs(Text, {\n        children: [\"Last Updated on : \", patient.Time]\n      }), _jsx(Text, {\n        children: _jsx(Pressable, {\n          children: _jsx(Icon.Button, {\n            style: styles.buttonOpen,\n            onPress: function onPress() {\n              navigate(\"/Patient_id/\" + String(patient.P_id));\n            },\n            children: \"Assessment\"\n          })\n        })\n      })]\n    })]\n  });\n}\n\nvar Reminder = function Reminder(props) {\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      GCS_List = _useState4[0],\n      setGCS_List = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      GCS = _useState6[0],\n      setGCS = _useState6[1];\n\n  function GetLists() {\n    axios.get(\"http://localhost:4000/get/GCS\").then(function (response) {\n      if (response.data != null) {\n        console.log(response.data);\n        var temp = [];\n\n        for (var i = 0; i < response.data.length; i++) {\n          if (response.data[i].Time) {\n              temp.push(response.data[i]);\n            }\n        }\n\n        setGCS_List(temp);\n        setGCS(temp);\n      } else {\n        alert(\"Unable to get GCS data!\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  useEffect(function () {\n    if (localStorage.getItem('user_data') == null) {\n      alert(\"Unauthorised Access\");\n      navigate(\"/\");\n    }\n\n    GetLists();\n  }, []);\n  var navigate = useNavigate();\n\n  var _useState7 = useState(GCS),\n      _useState8 = _slicedToArray(_useState7, 2),\n      searchData = _useState8[0],\n      setSearchData = _useState8[1];\n\n  var searchItem = function searchItem(query) {\n    if (!query) {\n      setGCS(GCS_List);\n      return;\n    }\n\n    var finalResult = [];\n    GCS_List.forEach(function (item) {\n      if (item.P_id.indexOf(query) !== -1) {\n        finalResult.push(item);\n      }\n    });\n    setGCS(finalResult);\n  };\n\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.container1,\n        children: [_jsx(Icon, {\n          style: styles.searchIcon,\n          name: \"search\",\n          size: 20,\n          color: \"#56BF9C\"\n        }), _jsx(TextInput, {\n          inlineImageLeft: \"search_icon\",\n          style: styles.buttonfuzzySearch,\n          type: \"search\",\n          placeholder: \"  Search Patient By ID\",\n          onChange: function onChange(e) {\n            return searchItem(e.target.value);\n          }\n        })]\n      })\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"GCS\"\n      }), GCS_List.map(function (gcs) {\n        {\n          console.log(gcs);\n        }\n        return _jsx(ReviewDetails, {\n          patient: gcs\n        }, gcs.P_id);\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingTop: 5,\n    paddingBottom: 5\n  },\n  container1: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  centeredView: {\n    flex: 1,\n    margin: 50,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.75,\n    shadowRadius: 4,\n    elevation: 15\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  buttonOpen: {\n    backgroundColor: \"#56BF9C\"\n  },\n  buttonOpen1: {\n    backgroundColor: \"#56BF9C\",\n    padding: 4\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 5\n  },\n  buttonfuzzySearch: {\n    borderWidth: 2,\n    borderRadius: 8,\n    borderColor: \"#56BF9C\",\n    strokeWidth: \"1\"\n  },\n  searchIcon: {\n    padding: 5\n  },\n  card: {\n    borderRadius: 6,\n    elevation: 3,\n    backgroundColor: '#fff',\n    shadowOffset: {\n      width: -2,\n      height: -3\n    },\n    shadowColor: '#56BF9C',\n    shadowOpacity: 1,\n    shadowRadius: 2,\n    marginHorizontal: 4,\n    marginVertical: 6\n  },\n  cardContent: {\n    marginHorizontal: 18,\n    marginVertical: 8\n  },\n  buttonOpen: {\n    alignContent: 'center',\n    backgroundColor: \"#56BF9C\",\n    paddingTop: 3\n  }\n});\nexport default Reminder;","map":{"version":3,"sources":["/home/mayank/DASSProject/DASS2K22-Team-48/src/Frontend/components/Reminder.js"],"names":["React","useContext","useEffect","useState","useNavigate","Icon","axios","ReviewDetails","props","patient","str","setStr","navigate","styles","card","cardContent","P_id","Time","buttonOpen","String","Reminder","GCS_List","setGCS_List","GCS","setGCS","GetLists","get","then","response","data","console","log","temp","i","length","push","alert","catch","error","localStorage","getItem","searchData","setSearchData","searchItem","query","finalResult","forEach","item","indexOf","container","container1","searchIcon","buttonfuzzySearch","e","target","value","map","gcs","StyleSheet","create","flex","flexDirection","justifyContent","paddingTop","paddingBottom","centeredView","margin","backgroundColor","borderRadius","padding","alignItems","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","modalView","buttonOpen1","input","borderWidth","borderColor","strokeWidth","marginHorizontal","marginVertical","alignContent"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport {\n    Alert,\n    Button,\n    ImageBackground,\n    StyleSheet,\n    Modal,\n    Text,\n    Pressable,\n    View,\n    SafeAreaView,\n    TextInput\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport axios from 'axios'\nfunction ReviewDetails(props) {\n    const { patient } = props;\n    const [str, setStr] = useState(\"\");\n\n    const navigate = useNavigate();\n    return (\n        <View style={styles.card}>\n            <View style={styles.cardContent}>\n                <Text>PatientID : {patient.P_id}</Text>\n            </View>\n            <View style={styles.cardContent}>\n                <Text>Last Updated on : {patient.Time}</Text>\n                <Text >\n                    <Pressable>\n                        <Icon.Button\n                            // name=\"profile\"\n                            style={styles.buttonOpen}\n                            onPress={() => {\n                                // setStr(\"/Patient_id/\" + String(patient.P_ID))\n                                navigate(\"/Patient_id/\" + String(patient.P_id))\n                            }}\n                        >\n                            Assessment\n                        </Icon.Button>\n                    </Pressable>\n                </Text>\n            </View>\n        </View>\n    );\n}\n\nconst Reminder = (props) => {\n    const [GCS_List, setGCS_List] = useState([]);\n    const [GCS, setGCS] = useState([]);\n    function GetLists(){\n        axios\n      .get(\"http://localhost:4000/get/GCS\")\n      .then((response) => {\n        if ((response.data) != null ) {\n            console.log(response.data)\n            let temp=[]\n            for(var i =0;i<response.data.length;i++)\n            {\n                if(response.data[i].Time )// condition\n                {\n                    temp.push(response.data[i])\n                }\n            }\n            setGCS_List(temp)\n            setGCS(temp)\n        }\n        else {\n          alert(\"Unable to get GCS data!\");\n\n        }\n        // console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n    useEffect(() => {\n        if (localStorage.getItem('user_data') == null) {\n            alert(\"Unauthorised Access\")\n            navigate(\"/\")\n        }\n       \n        GetLists();\n    }, []);\n\n    const navigate = useNavigate();\n\n    \n\n    // for fuzzy search\n    const [searchData, setSearchData] = useState(GCS);\n    const searchItem = (query) => {\n        if (!query) {\n            setGCS(GCS_List);\n            return;\n        }\n        const finalResult = [];\n        GCS_List.forEach((item) => {\n            if (\n                item.P_id.indexOf(query) !== -1\n            ) {\n                finalResult.push(item);\n            }\n        });\n        setGCS(finalResult);\n    };\n\n    return (\n        <SafeAreaView >\n            <View style={styles.container}>\n                \n                <View style={styles.container1}>\n                    <Icon\n                        style={styles.searchIcon}\n                        name=\"search\"\n                        size={20}\n                        color=\"#56BF9C\"\n                    />\n                    <TextInput\n                        inlineImageLeft='search_icon'\n                        style={styles.buttonfuzzySearch}\n                        type=\"search\"\n                        placeholder=\"  Search Patient By ID\"\n                        onChange={(e) => searchItem(e.target.value)}\n                    />\n                </View>\n            </View>\n\n            <View>\n                <Text>GCS</Text>\n            {GCS_List.map((gcs) => {\n                {console.log(gcs)}\n                return < ReviewDetails key={gcs.P_id} patient={gcs} />\n            })\n            }\n            </View>\n        </SafeAreaView >\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingTop: 5,\n        paddingBottom: 5,\n    },\n    container1: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        // paddingTop: 5,\n        // paddingBottom: 5,\n    },\n    centeredView: {\n        flex: 1,\n        margin: 50,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 15,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 5\n        },\n        shadowOpacity: 0.75,\n        shadowRadius: 4,\n        elevation: 15\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n    },\n    buttonOpen: {\n        backgroundColor: \"#56BF9C\",\n    },\n    buttonOpen1: {\n        backgroundColor: \"#56BF9C\",\n        padding: 4,\n        // borderRadius: 30\n    },\n    input: {\n        height: 40,\n        margin: 12,\n        borderWidth: 1,\n        padding: 5,\n    },\n    buttonfuzzySearch: {\n        borderWidth: 2,\n        borderRadius: 8,\n        borderColor: \"#56BF9C\",\n        strokeWidth: \"1\"\n    },\n    searchIcon: {\n        padding: 5\n    },\n    card: {\n        borderRadius: 6,\n        elevation: 3,\n        backgroundColor: '#fff',\n        shadowOffset: { width: -2, height: -3 },\n        shadowColor: '#56BF9C',\n        shadowOpacity: 1,\n        shadowRadius: 2,\n        marginHorizontal: 4,\n        marginVertical: 6,\n    },\n    cardContent: {\n        marginHorizontal: 18,\n        marginVertical: 8,\n    },\n    buttonOpen: {\n        alignContent: 'center',\n        backgroundColor: \"#56BF9C\",\n        paddingTop: 3,\n    }\n});\n\nexport default Reminder;\n"]},"metadata":{},"sourceType":"module"}
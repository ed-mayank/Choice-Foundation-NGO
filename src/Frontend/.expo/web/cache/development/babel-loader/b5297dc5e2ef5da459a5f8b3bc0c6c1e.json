{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Navbar = function Navbar() {\n  var navigate = useNavigate();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      str = _useState2[0],\n      setStr = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ind = _useState4[0],\n      setInd = _useState4[1];\n\n  var location = useLocation();\n  return _jsx(SafeAreaView, {\n    children: _jsxs(Text, {\n      style: styles.buttonOpen,\n      children: [_jsx(Pressable, {\n        children: _jsx(Icon.Button, {\n          style: styles.buttonOpen,\n          onPress: function onPress() {\n            var c = 0;\n\n            for (var i = 0; i < location.pathname.length; i++) {\n              if (location.pathname.charAt(i) == '/') {\n                c++;\n              }\n            }\n\n            setStr(location.pathname.substring(0, ind) + \"/Profile\");\n            console.log(str);\n            navigate(str);\n          },\n          children: \"Patient Profile\"\n        })\n      }), _jsx(Pressable, {\n        children: _jsx(Icon.Button, {\n          style: styles.buttonOpen,\n          onPress: function onPress() {\n            setStr(\"/Patient_id/\" + useParams() + \"Triage\");\n            navigate(str);\n          },\n          children: \"Triage\"\n        })\n      }), _jsx(Pressable, {\n        children: _jsx(Icon.Button, {\n          style: styles.buttonOpen,\n          onPress: function onPress() {\n            setStr(\"/Patient_id/\" + useParams() + \"GCS\");\n            navigate(str);\n          },\n          children: \"GCS\"\n        })\n      }), _jsx(Pressable, {\n        children: _jsx(Icon.Button, {\n          style: styles.buttonOpen,\n          onPress: function onPress() {\n            setStr(\"/Patient_id/\" + useParams() + \"CRS\");\n            navigate(str);\n          },\n          children: \"CRS\"\n        })\n      }), _jsx(Pressable, {\n        children: _jsx(Icon.Button, {\n          style: styles.buttonOpen,\n          onPress: function onPress() {\n            setStr(\"/Patient_id/\" + useParams() + \"PSofa\");\n            navigate(str);\n          },\n          children: \"PSofa\"\n        })\n      }), _jsx(Pressable, {\n        children: _jsx(Icon.Button, {\n          style: styles.buttonOpen,\n          onPress: function onPress() {\n            setStr(\"/Patient_id/\" + useParams() + \"Prism\");\n            navigate(str);\n          },\n          children: \"Prism\"\n        })\n      }), _jsx(Pressable, {\n        children: _jsx(Icon.Button, {\n          style: styles.buttonOpen,\n          onPress: function onPress() {\n            setStr(\"/Patient_id/\" + useParams() + \"OI\");\n            navigate(str);\n          },\n          children: \"Oxygenation Index\"\n        })\n      }), _jsx(Pressable, {\n        children: _jsx(Icon.Button, {\n          style: styles.buttonOpen,\n          onPress: function onPress() {\n            setStr(\"/Patient_id/\" + useParams() + \"API\");\n            navigate(str);\n          },\n          children: \"API\"\n        })\n      }), _jsx(Pressable, {\n        children: _jsx(Icon.Button, {\n          style: styles.buttonOpen,\n          onPress: function onPress() {\n            setStr(\"/Patient_id/\" + useParams() + \"Analysis\");\n            navigate(str);\n          },\n          children: \"Analysis\"\n        })\n      }), _jsx(Pressable, {\n        children: _jsx(Icon.Button, {\n          style: styles.buttonOpen,\n          onPress: function onPress() {\n            navigate(\"/User_id\");\n          },\n          children: \"Your Profile\"\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  buttonOpen: {\n    backgroundColor: \"#56BF9C\"\n  }\n});\nexport default Navbar;","map":{"version":3,"sources":["/home/xenos/2ndYear/Semester_4/DASS/Project/Repo/DASS2K22-Team-48/Frontend/components/Navbar_Patient.js"],"names":["useNavigate","useParams","useLocation","useState","Icon","Navbar","navigate","str","setStr","ind","setInd","location","styles","buttonOpen","c","i","pathname","length","charAt","substring","console","log","StyleSheet","create","backgroundColor"],"mappings":"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","sourcesContent":["import { useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport  {  useState } from 'react';\n\nimport {\n    Alert,\n    Button,\n    ImageBackground,\n    StyleSheet,\n    Modal,\n    Text,\n    Pressable,\n    View,\n    SafeAreaView,\n    TextInput\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nconst Navbar = () => {\n    const navigate = useNavigate();\n    const [str,setStr] = useState(\"\");\n    const [ind,setInd] = useState(0);\n    const location = useLocation();\n    return (\n        <SafeAreaView>\n            <Text style={styles.buttonOpen}>\n            <Pressable>\n                <Icon.Button\n                    // name=\"head\" \n                    style={styles.buttonOpen}\n                    onPress={() => {\n                        var c=0;\n                        for(var i=0;i<location.pathname.length;i++)\n                        {\n                            if(location.pathname.charAt(i)=='/')\n                            {\n                                c++;\n                            }\n                        }\n                        setStr(location.pathname.substring(0,ind)+\"/Profile\")\n                        console.log(str)\n                        navigate(str)\n                    }}\n                >\n                   Patient Profile\n                </Icon.Button>\n            </Pressable>\n            <Pressable>\n                <Icon.Button\n                    // name=\"plus\"\n                    style={styles.buttonOpen}\n                    onPress={() => {\n                        setStr(\"/Patient_id/\" + useParams()+\"Triage\")\n                        navigate(str)\n                    }}\n>\n                    Triage\n                </Icon.Button>\n            </Pressable>\n            <Pressable>\n                <Icon.Button\n                    // name=\"plus\"\n                    style={styles.buttonOpen}\n                    onPress={() => {\n                        setStr(\"/Patient_id/\" + useParams()+\"GCS\")\n                        navigate(str)\n                    }}\n>\n                    GCS\n                </Icon.Button>\n            </Pressable>\n            <Pressable>\n                <Icon.Button\n                    // name=\"plus\"\n                    style={styles.buttonOpen}\n                    onPress={() => {\n                        setStr(\"/Patient_id/\" + useParams()+\"CRS\")\n                        navigate(str)\n                    }}\n>\n                    CRS\n                </Icon.Button>\n            </Pressable>\n            <Pressable>\n                <Icon.Button\n                    // name=\"plus\"\n                    style={styles.buttonOpen}\n                    onPress={() => {\n                        setStr(\"/Patient_id/\" + useParams()+\"PSofa\")\n                        navigate(str)\n                    }}\n>\n                    PSofa\n                </Icon.Button>\n            </Pressable>\n            <Pressable>\n                <Icon.Button\n                    // name=\"plus\"\n                    style={styles.buttonOpen}\n                    onPress={() => {\n                        setStr(\"/Patient_id/\" + useParams()+\"Prism\")\n                        navigate(str)\n                    }}\n>\n                    Prism\n                </Icon.Button>\n            </Pressable>\n            <Pressable>\n                <Icon.Button\n                    // name=\"plus\"\n                    style={styles.buttonOpen}\n                    onPress={() => {\n                        setStr(\"/Patient_id/\" + useParams()+\"OI\")\n                        navigate(str)\n                    }}\n>\n                    Oxygenation Index\n                </Icon.Button>\n            </Pressable>\n            <Pressable>\n                <Icon.Button\n                    // name=\"plus\"\n                    style={styles.buttonOpen}\n                    onPress={() => {\n                        setStr(\"/Patient_id/\" + useParams()+\"API\")\n                        navigate(str)\n                    }}\n>\n                    API\n                </Icon.Button>\n            </Pressable>\n            <Pressable>\n                <Icon.Button\n                    // name=\"plus\"\n                    style={styles.buttonOpen}\n                    onPress={() => {\n                        setStr(\"/Patient_id/\" + useParams()+\"Analysis\")\n                        navigate(str)\n                    }}\n>\n                    Analysis\n                </Icon.Button>\n            </Pressable>\n            <Pressable>\n                <Icon.Button\n                    // name=\"plus\"\n                    style={styles.buttonOpen}\n                    onPress={() => {\n                        navigate(\"/User_id\")\n                    }}\n>\n                    Your Profile\n                </Icon.Button>\n            </Pressable>\n            </Text>\n        </SafeAreaView>\n    );\n};\nconst styles = StyleSheet.create({\n    buttonOpen: {\n        backgroundColor: \"#56BF9C\",\n    },\n    // button:{\n    //     backgroundColor: \"#569ebf\"\n    // }\n});\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}
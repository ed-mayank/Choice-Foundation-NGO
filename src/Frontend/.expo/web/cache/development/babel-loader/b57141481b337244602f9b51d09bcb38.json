{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport axios from \"axios\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ReviewDetails(props) {\n  var patient = props.patient;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      str = _useState2[0],\n      setStr = _useState2[1];\n\n  var navigate = useNavigate();\n  return _jsxs(View, {\n    style: styles.card,\n    children: [_jsx(View, {\n      style: styles.cardContent,\n      children: _jsxs(Text, {\n        children: [\"Patient ID : \", patient.P_id]\n      })\n    }), _jsx(View, {\n      style: styles.cardContent,\n      children: _jsxs(Text, {\n        children: [\"Last Updated By : \", patient.D_id]\n      })\n    }), _jsxs(View, {\n      style: styles.cardContent,\n      children: [_jsxs(Text, {\n        children: [\"Last Updated on : \", patient.Time]\n      }), _jsx(Text, {\n        children: _jsx(Pressable, {\n          children: _jsx(Icon.Button, {\n            style: styles.buttonOpen,\n            onPress: function onPress() {\n              navigate(\"/Patient_id/\" + String(patient.P_id));\n            },\n            children: \"Assessment\"\n          })\n        })\n      })]\n    })]\n  });\n}\n\nvar Reminder = function Reminder(props) {\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      GCS_List = _useState4[0],\n      setGCS_List = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      CRS_List = _useState6[0],\n      setCRS_List = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      CRS = _useState8[0],\n      setCRS = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Prism_List = _useState10[0],\n      setPrism_List = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      Prism = _useState12[0],\n      setPrism = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      PSofa_List = _useState14[0],\n      setPSofa_List = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      PSofa = _useState16[0],\n      setPSofa = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      OI_List = _useState18[0],\n      setOI_List = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      OI = _useState20[0],\n      setOI = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      API_List = _useState22[0],\n      setAPI_List = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      API = _useState24[0],\n      setAPI = _useState24[1];\n\n  function dateCondition(a, b) {\n    if (a == null) return false;\n    var dd = Number(a.substring(0, 2));\n    var hh = Number(a.substring(17, 19));\n    var mm = Number(a.substring(20, 22));\n    var ss = Number(a.substring(23, 25));\n    var curr = new Date();\n    var cDD = curr.getDate();\n    var cHH = curr.getHours();\n    var cMM = curr.getMinutes();\n    var cSS = curr.getSeconds();\n\n    if (b == \"Triage\") {\n      return false;\n    }\n\n    if (b == \"GCS\") return true;\n\n    if (b == \"GCS\" || b == \"CRS\" || b == \"OI\" || b == \"API\") {\n      if (cDD == dd) {\n        if (cHH - hh > 4) {\n          return true;\n        } else if (cHH - hh < 4) {\n          return false;\n        } else {\n          if (cMM < mm) {\n            return false;\n          } else {\n            return true;\n          }\n        }\n      } else {\n        if (24 - hh + cHH > 4) {\n          return true;\n        } else if (24 - hh + cHH < 4) {\n          return false;\n        } else {\n          if (cMM < mm) {\n            return false;\n          } else {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (b == \"PSofa\") {\n      if (cDD == dd) {\n        if (cHH - hh > 6) {\n          return true;\n        } else if (cHH - hh < 6) {\n          return false;\n        } else {\n          if (cMM < mm) {\n            return false;\n          } else {\n            return true;\n          }\n        }\n      } else {\n        if (24 - hh + cHH > 6) {\n          return true;\n        } else if (24 - hh + cHH < 6) {\n          return false;\n        } else {\n          if (cMM < mm) {\n            return false;\n          } else {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (b == \"Prism\") {\n      if (cDD == dd) {\n        return false;\n      } else {\n        if (24 - hh + cHH > 24) {\n          return true;\n        } else if (24 - hh + cHH < 24) {\n          return false;\n        } else {\n          if (cMM < mm) {\n            return false;\n          } else {\n            return true;\n          }\n        }\n      }\n    }\n  }\n\n  function GetLists() {\n    axios.get(\"http://localhost:4000/get/GCSReq\").then(function (response) {\n      if (response.data != null) {\n        var t = [];\n\n        for (var i = 0; i < response.data.length; i++) {\n          t.push(response.data[i]);\n        }\n\n        setGCS(t);\n        console.log(t);\n        console.log(GCS);\n        axios.get(\"http://localhost:4000/get/GCS\").then(function (response) {\n          if (response.data != null) {\n            var temp = [];\n\n            for (var i = 0; i < response.data.length; i++) {\n              var check = 0;\n\n              for (var j = 0; j < t.length; j++) {\n                if (t[j].id == response.data[i].GCS_id) {\n                  check = 1;\n                }\n              }\n\n              if (dateCondition(response.data[i].Time, \"GCS\") && check == 1) {\n                temp.push(response.data[i]);\n              }\n            }\n\n            setGCS_List(temp);\n          } else {\n            alert(\"Unable to get GCS data!\");\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        alert(\"Unable to get GCS data!\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(\"http://localhost:4000/get/CRS\").then(function (response) {\n      if (response.data != null) {\n        var temp = [];\n\n        for (var i = 0; i < response.data.length; i++) {\n          if (dateCondition(response.data[i].Time, \"CRS\")) {\n            temp.push(response.data[i]);\n          }\n        }\n\n        setCRS_List(temp);\n        setCRS(temp);\n      } else {\n        alert(\"Unable to get CRS data!\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(\"http://localhost:4000/get/Prism\").then(function (response) {\n      if (response.data != null) {\n        var temp = [];\n\n        for (var i = 0; i < response.data.length; i++) {\n          if (dateCondition(response.data[i].Time, \"Prism\")) {\n            temp.push(response.data[i]);\n          }\n        }\n\n        setPrism_List(temp);\n        setPrism(temp);\n      } else {\n        alert(\"Unable to get Prism data!\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(\"http://localhost:4000/get/PSofa\").then(function (response) {\n      if (response.data != null) {\n        var temp = [];\n\n        for (var i = 0; i < response.data.length; i++) {\n          if (dateCondition(response.data[i].Time, \"PSofa\")) {\n            temp.push(response.data[i]);\n          }\n        }\n\n        setPSofa_List(temp);\n        setPSofa(temp);\n      } else {\n        alert(\"Unable to get PSofa data!\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(\"http://localhost:4000/get/OI\").then(function (response) {\n      if (response.data != null) {\n        var temp = [];\n\n        for (var i = 0; i < response.data.length; i++) {\n          if (dateCondition(response.data[i].Time, \"OI\")) {\n            temp.push(response.data[i]);\n          }\n        }\n\n        setOI_List(temp);\n        setOI(temp);\n      } else {\n        alert(\"Unable to get OI data!\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get(\"http://localhost:4000/get/API\").then(function (response) {\n      if (response.data != null) {\n        var temp = [];\n\n        for (var i = 0; i < response.data.length; i++) {\n          if (dateCondition(response.data[i].Time, \"API\")) {\n            temp.push(response.data[i]);\n          }\n        }\n\n        setAPI_List(temp);\n        setAPI(temp);\n      } else {\n        alert(\"Unable to get API data!\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  useEffect(function () {\n    if (localStorage.getItem(\"user_data\") == null) {\n      alert(\"Unauthorised Access\");\n      navigate(\"/\");\n    }\n\n    GetLists();\n  }, []);\n  var navigate = useNavigate();\n  return _jsxs(SafeAreaView, {\n    children: [_jsxs(View, {\n      children: [_jsx(View, {\n        children: _jsxs(Text, {\n          style: styles.text,\n          children: [\" \", \"Following Patients requires reassessment for GCS:\"]\n        })\n      }), GCS_List.map(function (gcs) {\n        return _jsx(ReviewDetails, {\n          patient: gcs\n        }, gcs.P_id);\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Following Patients requires reassessment for CRS:\"\n        })\n      }), CRS_List.map(function (gcs) {\n        return _jsx(ReviewDetails, {\n          patient: gcs\n        }, gcs.P_id);\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Following Patients requires reassessment for Prism:\"\n        })\n      }), Prism_List.map(function (gcs) {\n        return _jsx(ReviewDetails, {\n          patient: gcs\n        }, gcs.P_id);\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Following Patients requires reassessment for PSofa:\"\n        })\n      }), PSofa_List.map(function (gcs) {\n        return _jsx(ReviewDetails, {\n          patient: gcs\n        }, gcs.P_id);\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Following Patients requires reassessment for OI:\"\n        })\n      }), OI_List.map(function (gcs) {\n        return _jsx(ReviewDetails, {\n          patient: gcs\n        }, gcs.P_id);\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Following Patients requires reassessment for API:\"\n        })\n      }), API_List.map(function (gcs) {\n        return _jsx(ReviewDetails, {\n          patient: gcs\n        }, gcs.P_id);\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingTop: 5,\n    paddingBottom: 5\n  },\n  container1: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\"\n  },\n  centeredView: {\n    flex: 1,\n    margin: 50,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.75,\n    shadowRadius: 4,\n    elevation: 15\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  buttonOpen: {\n    backgroundColor: \"#56BF9C\"\n  },\n  buttonOpen1: {\n    backgroundColor: \"#56BF9C\",\n    padding: 4\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 5\n  },\n  buttonfuzzySearch: {\n    borderWidth: 2,\n    borderRadius: 8,\n    borderColor: \"#56BF9C\",\n    strokeWidth: \"1\"\n  },\n  searchIcon: {\n    padding: 5\n  },\n  card: {\n    borderRadius: 6,\n    elevation: 3,\n    backgroundColor: \"#fff\",\n    shadowOffset: {\n      width: -2,\n      height: -3\n    },\n    shadowColor: \"#56BF9C\",\n    shadowOpacity: 1,\n    shadowRadius: 2,\n    marginHorizontal: 4,\n    marginVertical: 6\n  },\n  cardContent: {\n    marginHorizontal: 18,\n    marginVertical: 8\n  },\n  buttonOpen: {\n    alignContent: \"center\",\n    backgroundColor: \"#56BF9C\",\n    paddingTop: 3\n  },\n  text: {\n    fontSize: 40,\n    fontWeight: \"bold\",\n    padding: 9\n  }\n});\nexport default Reminder;","map":{"version":3,"sources":["/home/xenos/2ndYear/Semester_4/DASS/Project/Repo/DASS2K22-Team-48/src/Frontend/components/Reminder.js"],"names":["React","useContext","useEffect","useState","useNavigate","Icon","axios","ReviewDetails","props","patient","str","setStr","navigate","styles","card","cardContent","P_id","D_id","Time","buttonOpen","String","Reminder","GCS_List","setGCS_List","CRS_List","setCRS_List","CRS","setCRS","Prism_List","setPrism_List","Prism","setPrism","PSofa_List","setPSofa_List","PSofa","setPSofa","OI_List","setOI_List","OI","setOI","API_List","setAPI_List","API","setAPI","dateCondition","a","b","dd","Number","substring","hh","mm","ss","curr","Date","cDD","getDate","cHH","getHours","cMM","getMinutes","cSS","getSeconds","GetLists","get","then","response","data","t","i","length","push","setGCS","console","log","GCS","temp","check","j","id","GCS_id","alert","catch","error","localStorage","getItem","text","map","gcs","StyleSheet","create","container","flex","flexDirection","justifyContent","paddingTop","paddingBottom","container1","centeredView","margin","backgroundColor","borderRadius","padding","alignItems","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","modalView","buttonOpen1","input","borderWidth","buttonfuzzySearch","borderColor","strokeWidth","searchIcon","marginHorizontal","marginVertical","alignContent","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n    Alert,\n    Button,\n    ImageBackground,\n    StyleSheet,\n    Modal,\n    Text,\n    Pressable,\n    View,\n    SafeAreaView,\n    TextInput,\n} from \"react-native\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport axios from \"axios\";\nfunction ReviewDetails(props) {\n    const { patient } = props;\n    const [str, setStr] = useState(\"\");\n\n    const navigate = useNavigate();\n    return (\n        <View style={styles.card}>\n            <View style={styles.cardContent}>\n                <Text>Patient ID : {patient.P_id}</Text>\n            </View>\n            <View style={styles.cardContent}>\n                <Text>Last Updated By : {patient.D_id}</Text>\n            </View>\n            <View style={styles.cardContent}>\n                <Text>Last Updated on : {patient.Time}</Text>\n                <Text>\n                    <Pressable>\n                        <Icon.Button\n                            // name=\"profile\"\n                            style={styles.buttonOpen}\n                            onPress={() => {\n                                // setStr(\"/Patient_id/\" + String(patient.P_ID))\n                                navigate(\"/Patient_id/\" + String(patient.P_id));\n                            }}\n                        >\n                            Assessment\n                        </Icon.Button>\n                    </Pressable>\n                </Text>\n            </View>\n        </View>\n    );\n}\n\nconst Reminder = (props) => {\n    const [GCS_List, setGCS_List] = useState([]);\n    const [CRS_List, setCRS_List] = useState([]);\n    const [CRS, setCRS] = useState([]);\n    const [Prism_List, setPrism_List] = useState([]);\n    const [Prism, setPrism] = useState([]);\n    const [PSofa_List, setPSofa_List] = useState([]);\n    const [PSofa, setPSofa] = useState([]);\n    const [OI_List, setOI_List] = useState([]);\n    const [OI, setOI] = useState([]);\n    const [API_List, setAPI_List] = useState([]);\n    const [API, setAPI] = useState([]);\n\n    function dateCondition(a, b) {\n        if (a == null) return false;\n        var dd = Number(a.substring(0, 2));\n        var hh = Number(a.substring(17, 19));\n        var mm = Number(a.substring(20, 22));\n        var ss = Number(a.substring(23, 25));\n\n        var curr = new Date();\n        var cDD = curr.getDate();\n        var cHH = curr.getHours();\n        var cMM = curr.getMinutes();\n        var cSS = curr.getSeconds();\n\n        if (b == \"Triage\") {\n            return false;\n        }\n        if (b == \"GCS\") return true;\n        if (b == \"GCS\" || b == \"CRS\" || b == \"OI\" || b == \"API\") {\n            if (cDD == dd) {\n                if (cHH - hh > 4) {\n                    return true;\n                } else if (cHH - hh < 4) {\n                    return false;\n                } else {\n                    if (cMM < mm) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }\n            } else {\n                if (24 - hh + cHH > 4) {\n                    return true;\n                } else if (24 - hh + cHH < 4) {\n                    return false;\n                } else {\n                    if (cMM < mm) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }\n            }\n        }\n        if (b == \"PSofa\") {\n            if (cDD == dd) {\n                if (cHH - hh > 6) {\n                    return true;\n                } else if (cHH - hh < 6) {\n                    return false;\n                } else {\n                    if (cMM < mm) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }\n            } else {\n                if (24 - hh + cHH > 6) {\n                    return true;\n                } else if (24 - hh + cHH < 6) {\n                    return false;\n                } else {\n                    if (cMM < mm) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }\n            }\n        }\n        if (b == \"Prism\") {\n            if (cDD == dd) {\n                return false;\n            } else {\n                if (24 - hh + cHH > 24) {\n                    return true;\n                } else if (24 - hh + cHH < 24) {\n                    return false;\n                } else {\n                    if (cMM < mm) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n\n    function GetLists() {\n        axios\n            .get(\"http://localhost:4000/get/GCSReq\")\n            .then((response) => {\n                if (response.data != null) {\n                    let t = [];\n\n                    for (var i = 0; i < response.data.length; i++) {\n                        t.push(response.data[i]);\n                    }\n                    setGCS(t);\n                    console.log(t)\n                    console.log(GCS)\n\n                    axios\n                        .get(\"http://localhost:4000/get/GCS\")\n                        .then((response) => {\n                            if (response.data != null) {\n                                let temp = [];\n                                for (var i = 0; i < response.data.length; i++) {\n                                    let check = 0\n                                    for (var j = 0; j < t.length; j++) {\n                                        if (t[j].id == response.data[i].GCS_id) {\n                                            check = 1\n                                        }\n                                    }\n                                    if (dateCondition(response.data[i].Time, \"GCS\") && check == 1) {\n                                        temp.push(response.data[i]);\n                                    }\n                                }\n                                setGCS_List(temp);\n                            } else {\n                                alert(\"Unable to get GCS data!\");\n                            }\n                        })\n                        .catch(function (error) {\n                            console.log(error);\n                        });\n\n                } else {\n                    alert(\"Unable to get GCS data!\");\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        axios\n            .get(\"http://localhost:4000/get/CRS\")\n            .then((response) => {\n                if (response.data != null) {\n                    let temp = [];\n                    for (var i = 0; i < response.data.length; i++) {\n                        if (dateCondition(response.data[i].Time, \"CRS\")) {\n                            // condition\n                            temp.push(response.data[i]);\n                        }\n                    }\n                    setCRS_List(temp);\n                    setCRS(temp);\n                } else {\n                    alert(\"Unable to get CRS data!\");\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        axios\n            .get(\"http://localhost:4000/get/Prism\")\n            .then((response) => {\n                if (response.data != null) {\n                    let temp = [];\n                    for (var i = 0; i < response.data.length; i++) {\n                        if (dateCondition(response.data[i].Time, \"Prism\")) {\n                            // condition\n                            temp.push(response.data[i]);\n                        }\n                    }\n                    setPrism_List(temp);\n                    setPrism(temp);\n                } else {\n                    alert(\"Unable to get Prism data!\");\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        axios\n            .get(\"http://localhost:4000/get/PSofa\")\n            .then((response) => {\n                if (response.data != null) {\n                    let temp = [];\n                    for (var i = 0; i < response.data.length; i++) {\n                        if (dateCondition(response.data[i].Time, \"PSofa\")) {\n                            // condition\n                            temp.push(response.data[i]);\n                        }\n                    }\n                    setPSofa_List(temp);\n                    setPSofa(temp);\n                } else {\n                    alert(\"Unable to get PSofa data!\");\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        axios\n            .get(\"http://localhost:4000/get/OI\")\n            .then((response) => {\n                if (response.data != null) {\n                    let temp = [];\n                    for (var i = 0; i < response.data.length; i++) {\n                        if (dateCondition(response.data[i].Time, \"OI\")) {\n                            // condition\n                            temp.push(response.data[i]);\n                        }\n                    }\n                    setOI_List(temp);\n                    setOI(temp);\n                } else {\n                    alert(\"Unable to get OI data!\");\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        axios\n            .get(\"http://localhost:4000/get/API\")\n            .then((response) => {\n                if (response.data != null) {\n                    let temp = [];\n                    for (var i = 0; i < response.data.length; i++) {\n                        if (dateCondition(response.data[i].Time, \"API\")) {\n                            // condition\n                            temp.push(response.data[i]);\n                        }\n                    }\n                    setAPI_List(temp);\n                    setAPI(temp);\n                } else {\n                    alert(\"Unable to get API data!\");\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    useEffect(() => {\n        if (localStorage.getItem(\"user_data\") == null) {\n            alert(\"Unauthorised Access\");\n            navigate(\"/\");\n        }\n\n        GetLists();\n    }, []);\n\n    const navigate = useNavigate();\n\n\n    return (\n        <SafeAreaView>\n            <View>\n                <View>\n                    <Text style={styles.text}>\n                        {\" \"}\n                        Following Patients requires reassessment for GCS:\n                    </Text>\n                </View>\n                {GCS_List.map((gcs) => {\n                    return <ReviewDetails key={gcs.P_id} patient={gcs} />;\n                })}\n            </View>\n            <View>\n                <View>\n                    <Text style={styles.text}>\n                        Following Patients requires reassessment for CRS:\n                    </Text>\n                </View>\n                {CRS_List.map((gcs) => {\n                    return <ReviewDetails key={gcs.P_id} patient={gcs} />;\n                })}\n            </View>\n            <View>\n                <View>\n                    <Text style={styles.text}>\n                        Following Patients requires reassessment for Prism:\n                    </Text>\n                </View>\n                {Prism_List.map((gcs) => {\n                    return <ReviewDetails key={gcs.P_id} patient={gcs} />;\n                })}\n            </View>\n            <View>\n                <View>\n                    <Text style={styles.text}>\n                        Following Patients requires reassessment for PSofa:\n                    </Text>\n                </View>\n                {PSofa_List.map((gcs) => {\n                    return <ReviewDetails key={gcs.P_id} patient={gcs} />;\n                })}\n            </View>\n            <View>\n                <View>\n                    <Text style={styles.text}>\n                        Following Patients requires reassessment for OI:\n                    </Text>\n                </View>\n                {OI_List.map((gcs) => {\n                    return <ReviewDetails key={gcs.P_id} patient={gcs} />;\n                })}\n            </View>\n            <View>\n                <View>\n                    <Text style={styles.text}>\n                        Following Patients requires reassessment for API:\n                    </Text>\n                </View>\n                {API_List.map((gcs) => {\n                    return <ReviewDetails key={gcs.P_id} patient={gcs} />;\n                })}\n            </View>\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        paddingTop: 5,\n        paddingBottom: 5,\n    },\n    container1: {\n        flex: 1,\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n        // paddingTop: 5,\n        // paddingBottom: 5,\n    },\n    centeredView: {\n        flex: 1,\n        margin: 50,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 15,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 5,\n        },\n        shadowOpacity: 0.75,\n        shadowRadius: 4,\n        elevation: 15,\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5,\n    },\n    buttonOpen: {\n        backgroundColor: \"#56BF9C\",\n    },\n    buttonOpen1: {\n        backgroundColor: \"#56BF9C\",\n        padding: 4,\n        // borderRadius: 30\n    },\n    input: {\n        height: 40,\n        margin: 12,\n        borderWidth: 1,\n        padding: 5,\n    },\n    buttonfuzzySearch: {\n        borderWidth: 2,\n        borderRadius: 8,\n        borderColor: \"#56BF9C\",\n        strokeWidth: \"1\",\n    },\n    searchIcon: {\n        padding: 5,\n    },\n    card: {\n        borderRadius: 6,\n        elevation: 3,\n        backgroundColor: \"#fff\",\n        shadowOffset: { width: -2, height: -3 },\n        shadowColor: \"#56BF9C\",\n        shadowOpacity: 1,\n        shadowRadius: 2,\n        marginHorizontal: 4,\n        marginVertical: 6,\n    },\n    cardContent: {\n        marginHorizontal: 18,\n        marginVertical: 8,\n    },\n    buttonOpen: {\n        alignContent: \"center\",\n        backgroundColor: \"#56BF9C\",\n        paddingTop: 3,\n    },\n    text: {\n        fontSize: 40,\n        fontWeight: \"bold\",\n        padding: 9,\n    },\n});\n\nexport default Reminder;\n"]},"metadata":{},"sourceType":"module"}
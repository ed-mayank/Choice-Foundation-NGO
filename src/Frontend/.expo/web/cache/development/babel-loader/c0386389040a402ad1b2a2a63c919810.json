{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigate } from \"react-router-dom\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar onClick = function onClick(event) {\n  event.preventDefault();\n  var newUser = {\n    email: email,\n    pass: Bpass\n  };\n  axios.post(\"/backend/user/login\", newUser).then(function (response) {\n    if (response.data != null) {\n      var em = localStorage.getItem(\"Uemail\");\n\n      if (em) {\n        localStorage.removeItem(\"Uemail\");\n      }\n\n      localStorage.setItem(\"Uemail\", email);\n      navigate(\"/profileUser\");\n    } else {\n      alert(\"Wrong email or password \");\n    }\n\n    console.log(response.data);\n  }).catch(function (error) {\n    alert(error);\n  });\n  resetInputs();\n};\n\nfunction ReviewDetails(props) {\n  var patient = props.patient;\n  var navigate = useNavigate();\n  return _jsxs(View, {\n    style: styles.card,\n    children: [_jsx(View, {\n      style: styles.cardContent,\n      children: _jsxs(Text, {\n        children: [\"Name : \", patient.PATIENT_NAME]\n      })\n    }), _jsx(View, {\n      style: styles.cardContent,\n      children: _jsxs(Text, {\n        children: [\"PatientID : \", patient.P_ID]\n      })\n    }), _jsx(View, {\n      style: styles.cardContent,\n      children: _jsxs(Text, {\n        children: [\"Age : \", patient.AGE]\n      })\n    }), _jsxs(View, {\n      style: styles.cardContent,\n      children: [_jsxs(Text, {\n        children: [\"Gender : \", patient.GENDER]\n      }), _jsx(Text, {\n        style: styles.buttonOpen,\n        children: _jsx(Pressable, {\n          children: _jsx(Icon.Button, {\n            style: styles.buttonOpen,\n            onPress: function onPress() {\n              onClick;\n            },\n            children: \"Assessment\"\n          })\n        })\n      })]\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  card: {\n    borderRadius: 6,\n    elevation: 3,\n    backgroundColor: '#fff',\n    shadowOffset: {\n      width: -2,\n      height: -3\n    },\n    shadowColor: '#333',\n    shadowOpacity: 1,\n    shadowRadius: 2,\n    marginHorizontal: 4,\n    marginVertical: 6\n  },\n  cardContent: {\n    marginHorizontal: 18,\n    marginVertical: 8\n  },\n  buttonOpen: {\n    alignContent: 'center'\n  }\n});\nexport default ReviewDetails;","map":{"version":3,"sources":["/home/xenos/2ndYear/Semester_4/DASS/Project/Repo/DASS2K22-Team-48/Frontend/components/ReviewDetails.js"],"names":["React","useNavigate","Icon","onClick","event","preventDefault","newUser","email","pass","Bpass","axios","post","then","response","data","em","localStorage","getItem","removeItem","setItem","navigate","alert","console","log","catch","error","resetInputs","ReviewDetails","props","patient","styles","card","cardContent","PATIENT_NAME","P_ID","AGE","GENDER","buttonOpen","StyleSheet","create","borderRadius","elevation","backgroundColor","shadowOffset","width","height","shadowColor","shadowOpacity","shadowRadius","marginHorizontal","marginVertical","alignContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { useNavigate } from \"react-router-dom\";\n\nimport {\n    Alert,\n    Button,\n    ImageBackground,\n    Modal,\n    Pressable,\n    SafeAreaView,\n    TextInput\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nconst onClick = (event) => {\n\n    event.preventDefault();\n    const newUser = {\n        email: email,\n        pass: Bpass,\n    };\n\n    axios\n        .post(\"/backend/user/login\", newUser)\n        .then((response) => {\n            if ((response.data) != null) {\n                var em = localStorage.getItem(\"Uemail\");\n                if (em) {\n                    localStorage.removeItem(\"Uemail\");\n                }\n                localStorage.setItem(\"Uemail\", email);\n\n                navigate(\"/profileUser\");\n            }\n            else {\n                alert(\"Wrong email or password \");\n\n            }\n            console.log(response.data);\n        })\n        .catch(function (error) {\n            alert(error);\n        });\n\n    resetInputs();\n};\nfunction ReviewDetails(props) {\n    const { patient } = props;\n    const navigate = useNavigate();\n\n    return (\n        <View style={styles.card}>\n            <View style={styles.cardContent}>\n                <Text>Name : {patient.PATIENT_NAME}</Text>\n            </View>\n            <View style={styles.cardContent}>\n                <Text>PatientID : {patient.P_ID}</Text>\n            </View>\n            <View style={styles.cardContent}>\n                <Text>Age : {patient.AGE}</Text>\n            </View>\n            <View style={styles.cardContent}>\n                <Text>Gender : {patient.GENDER}</Text>\n                <Text style={styles.buttonOpen}>\n                    <Pressable>\n                        <Icon.Button\n                            // name=\"profile\"\n                            style={styles.buttonOpen}\n                            onPress={() => { onClick }}\n                        >\n                            Assessment\n                        </Icon.Button>\n                    </Pressable>\n                </Text>\n            </View>\n\n            {/* <View style={styles.cardContent}>\n                <Text>Date of Admission : {patient.date}</Text>\n            </View> */}\n            {/* <View style={styles.cardContent}>\n                <Text>Dime of Admission : {patient.time}</Text>\n            </View> */}\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    card: {\n        borderRadius: 6,\n        elevation: 3,\n        backgroundColor: '#fff',\n        shadowOffset: { width: -2, height: -3 },\n        shadowColor: '#333',\n        shadowOpacity: 1,\n        shadowRadius: 2,\n        marginHorizontal: 4,\n        marginVertical: 6,\n    },\n    cardContent: {\n        marginHorizontal: 18,\n        marginVertical: 8,\n    },\n    buttonOpen: {\n        alignContent: 'center'\n    }\n});\n\nexport default ReviewDetails;\n"]},"metadata":{},"sourceType":"module"}
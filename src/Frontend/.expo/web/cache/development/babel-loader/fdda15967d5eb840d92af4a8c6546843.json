{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport ReviewDetails from \"./ReviewDetails\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Maindashboard = function Maindashboard(props) {\n  var initialPatients = [];\n\n  var _useState = useState(initialPatients),\n      _useState2 = _slicedToArray(_useState, 2),\n      patients = _useState2[0],\n      setPatients = _useState2[1];\n\n  var patientsList = function patientsList() {\n    var result, data, p_list;\n    return _regeneratorRuntime.async(function patientsList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://devapi.igzolt.in/index.php/Api/ip_patients_list1', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                \"start\": \"1\",\n                \"limit\": \"20\",\n                \"ser_hospitalid\": \"3\",\n                \"sear_umr_no\": \"\",\n                \"sear_ip_no\": \"\",\n                \"sear_patient\": \"\",\n                \"sear_admission_date\": \"\",\n                \"sear_consult_doctor\": \"\",\n                \"sear_sponser\": \"\",\n                \"admission_date_order\": \"\",\n                \"doctor_name_order\": \"\",\n                \"ipno_order\": \"\",\n                \"sponser_order\": \"\",\n                \"sear_ptmid\": \"\"\n              })\n            }));\n\n          case 2:\n            result = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(result.json());\n\n          case 5:\n            data = _context.sent;\n            p_list = data.data;\n            setPatients(p_list);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    console.log(\"api\");\n    patientsList();\n  }, []);\n  var navigate = useNavigate();\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      onChangeName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      gender = _useState8[0],\n      onChangeGender = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      patientIp = _useState10[0],\n      onChangePatientIp = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      date = _useState12[0],\n      onChangeDate = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      time = _useState14[0],\n      onChangeTime = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      open = _useState16[0],\n      setOpen = _useState16[1];\n\n  var resetInputs = function resetInputs() {\n    onChangeName(\"\");\n    onChangeGender(\"\");\n    onChangePatientIp(\"\");\n    onChangeDate(\"\");\n    onChangeTime(\"\");\n  };\n\n  var addPatient = function addPatient(patientName, gender, patientID, createDateTime, emailId, address, city, stateCountry, pincode, country, status, title) {\n    var response, data;\n    return _regeneratorRuntime.async(function addPatient$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(JSON.stringify({\n              patientName: patientName,\n              gender: gender,\n              age: age,\n              patientID: patientID,\n              createDateTime: createDateTime,\n              emailId: emailId,\n              address: address,\n              city: city,\n              stateCountry: stateCountry,\n              pincode: pincode,\n              country: country,\n              status: status,\n              title: title\n            }));\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://devapi.igzolt.in/index.php/v1/patient/registerPatient', {\n              mode: 'cors',\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                patientName: patientName,\n                gender: gender,\n                patientID: patientID,\n                createDateTime: createDateTime,\n                emailId: emailId,\n                address: address,\n                city: city,\n                stateCountry: stateCountry,\n                pincode: pincode,\n                country: country,\n                status: status,\n                title: title\n              })\n            }).catch(function (e) {\n              console.log(e);\n            }));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            data = _context2.sent;\n            console.log(data);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSubmit = function onSubmit(event) {\n    setModalVisible(!modalVisible);\n    event.preventDefault();\n    var newPatient = {\n      patientName: name,\n      gender: gender,\n      patientID: patientIp,\n      createDateTime: date + \" \" + time,\n      address: \"\",\n      emailId: \"\",\n      city: \"\",\n      stateCountry: \"\",\n      pincode: \"\",\n      country: \"INDIA\",\n      status: \"\",\n      title: \"\"\n    };\n    console.log(newPatient);\n    addPatient(newPatient.patientName, newPatient.gender, newPatient.patientID, newPatient.createDateTime, newPatient.address, newPatient.emailId, newPatient.city, newPatient.stateCountry, newPatient.pincode, newPatient.country, newPatient.status, newPatient.title);\n    resetInputs();\n  };\n\n  var _useState17 = useState(patients),\n      _useState18 = _slicedToArray(_useState17, 2),\n      searchData = _useState18[0],\n      setSearchData = _useState18[1];\n\n  var searchItem = function searchItem(query) {\n    if (!query) {\n      setPatients(patients);\n      return;\n    }\n\n    var finalResult = [];\n    patients.forEach(function (item) {\n      if (item.P_ID.indexOf(query) !== -1) {\n        finalResult.push(item);\n      }\n    });\n    setPatients(finalResult);\n  };\n\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(Modal, {\n      animationType: \"fade\",\n      transparent: true,\n      visible: modalVisible,\n      children: _jsxs(View, {\n        style: styles.centeredView,\n        children: [_jsx(Text, {\n          children: \"Patient Name\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangeName,\n          value: name,\n          placeholder: \"Patient Name\",\n          keyboardType: \"ascii-capable\"\n        }), _jsx(Text, {\n          children: \"Gender\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangeGender,\n          value: gender,\n          placeholder: \"Gender\",\n          keyboardType: \"ascii-capable\"\n        }), _jsx(Text, {\n          children: \"Patient IP\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangePatientIp,\n          value: patientIp,\n          placeholder: \"Patient IP\",\n          keyboardType: \"ascii-capable\"\n        }), _jsx(Text, {\n          children: \"Time of Admission(YYYY-MM-DD)\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          format: \"DD-MM-YYYY\",\n          onChangeText: onChangeDate,\n          value: date,\n          placeholder: \"Date of Admission(YYYY-MM-DD)\",\n          keyboardType: \"decimal-pad\"\n        }), _jsx(Text, {\n          children: \"Time of Admission(HH:MM:SS)\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: onChangeTime,\n          value: time,\n          placeholder: \"Time of Admission\",\n          keyboardType: \"decimal-pad\"\n        }), _jsx(Pressable, {\n          children: _jsx(Button, {\n            title: \"submit\",\n            style: styles.buttonOpen,\n            onPress: onSubmit,\n            children: \"Register\"\n          })\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        children: _jsx(Pressable, {\n          children: _jsx(Icon.Button, {\n            name: \"plus\",\n            style: styles.buttonOpen,\n            onPress: function onPress() {\n              return setModalVisible(true);\n            },\n            children: \"Add New Patient\"\n          })\n        })\n      }), _jsxs(Text, {\n        children: [_jsx(Icon.Button, {\n          name: \"search\",\n          style: styles.buttonSearch,\n          children: \"Search Patient\"\n        }), _jsx(\"input\", {\n          type: \"search\",\n          onChange: function onChange(e) {\n            return searchItem(e.target.value);\n          },\n          placeholder: \"Search Patient By ID\"\n        })]\n      }), _jsx(TextInput, {\n        inlineImageLeft: \"search_icon\",\n        style: styles.buttonSearch\n      })]\n    }), patients.map(function (patient) {\n      return _jsx(ReviewDetails, {\n        patient: patient\n      }, patient.P_ID);\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingTop: 5,\n    paddingBottom: 5\n  },\n  centeredView: {\n    flex: 1,\n    margin: 50,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.75,\n    shadowRadius: 4,\n    elevation: 15\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  buttonOpen: {\n    backgroundColor: \"#56BF9C\"\n  },\n  buttonSearch: {\n    backgroundColor: \"#56BF9C\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 5\n  }\n});\nexport default Maindashboard;","map":{"version":3,"sources":["/home/shera/Desktop/DASS_1/Project/DASS2K22-Team-48/Frontend/components/Maindashboard.js"],"names":["React","useContext","useEffect","useState","useNavigate","Icon","ReviewDetails","Maindashboard","props","initialPatients","patients","setPatients","patientsList","fetch","method","headers","body","JSON","stringify","result","json","data","p_list","console","log","navigate","modalVisible","setModalVisible","name","onChangeName","gender","onChangeGender","patientIp","onChangePatientIp","date","onChangeDate","time","onChangeTime","open","setOpen","resetInputs","addPatient","patientName","patientID","createDateTime","emailId","address","city","stateCountry","pincode","country","status","title","age","mode","catch","e","response","onSubmit","event","preventDefault","newPatient","searchData","setSearchData","searchItem","query","finalResult","forEach","item","P_ID","indexOf","push","styles","centeredView","input","buttonOpen","container","buttonSearch","target","value","map","patient","StyleSheet","create","flex","flexDirection","justifyContent","paddingTop","paddingBottom","margin","backgroundColor","borderRadius","padding","alignItems","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","modalView","borderWidth"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport {\n    Alert,\n    Button,\n    ImageBackground,\n    StyleSheet,\n    Modal,\n    Text,\n    Pressable,\n    View,\n    SafeAreaView,\n    TextInput\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport ReviewDetails from './ReviewDetails';\n\n\nconst Maindashboard = (props) => {\n    // const context = useContext(PatientContext);\n    // const { patients, addPatient } = context;\n    const initialPatients = [];\n    const [patients, setPatients] = useState(initialPatients);\n    const patientsList = async () => {\n        const result = await fetch('https://devapi.igzolt.in/index.php/Api/ip_patients_list1',\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    \"start\": \"1\",\n                    \"limit\": \"20\",\n                    \"ser_hospitalid\": \"3\",\n                    \"sear_umr_no\": \"\",\n                    \"sear_ip_no\": \"\",\n                    \"sear_patient\": \"\",\n                    \"sear_admission_date\": \"\",\n                    \"sear_consult_doctor\": \"\",\n                    \"sear_sponser\": \"\",\n                    \"admission_date_order\": \"\",\n                    \"doctor_name_order\": \"\",\n                    \"ipno_order\": \"\",\n                    \"sponser_order\": \"\",\n                    \"sear_ptmid\": \"\"\n                })\n            })\n        const data = await result.json();\n        const p_list = data.data\n        // console.log(\"data is :\")\n        // console.log(p_list)\n        // console.log(p_list[1])\n        // console.log(typeof p_list[1])\n        setPatients(p_list);\n    }\n    useEffect(() => {\n        console.log(\"api\")\n        patientsList();\n    }, []);\n\n    const navigate = useNavigate();\n\n    const [modalVisible, setModalVisible] = useState(false);\n    const [name, onChangeName] = useState(\"\");\n    // const [age, onChangeAge] = useState(\"\")\n    const [gender, onChangeGender] = useState(\"\")\n    const [patientIp, onChangePatientIp] = useState(\"\")\n    const [date, onChangeDate] = useState(\"\");\n    const [time, onChangeTime] = useState(\"\");\n    const [open, setOpen] = useState(false);\n\n    const resetInputs = () => {\n        onChangeName(\"\");\n        // onChangeAge(\"\");\n        onChangeGender(\"\");\n        onChangePatientIp(\"\");\n        onChangeDate(\"\");\n        onChangeTime(\"\");\n    };\n\n    const addPatient = async (patientName, gender, patientID,\n        createDateTime, emailId, address, city, stateCountry,\n        pincode, country, status, title) => {\n\n        console.log(JSON.stringify({\n            patientName, gender, age, patientID,\n            createDateTime, emailId, address, city, stateCountry,\n            pincode, country, status, title\n        }))\n        const response = await fetch('https://devapi.igzolt.in/index.php/v1/patient/registerPatient', {\n            mode: 'cors',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                patientName, gender, patientID,\n                createDateTime, emailId, address, city, stateCountry,\n                pincode, country, status, title\n            })\n        }).catch((e) => {\n            console.log(e)\n        })\n        const data = await response.json();\n        console.log(data);\n    }\n\n    const onSubmit = (event) => {\n        setModalVisible(!modalVisible)\n        event.preventDefault();\n\n        const newPatient = {\n            patientName: name,\n            // age: age,\n            gender: gender,\n            patientID: patientIp,\n            createDateTime: date + \" \" + time,\n            // date: date,\n            // time: time,\n            // createDateTime: \"2022-04-18 10:24:28\",\n\n            address: \"\",\n            emailId: \"\",\n            city: \"\",\n            stateCountry: \"\",\n            pincode: \"\",\n            country: \"INDIA\",\n            status: \"\",\n            title: \"\"\n\n            // createId: \"\",\n            // dateOfBirth: \"2015-04-17\",\n            // familyGroupId: \"\",\n            // familyGroupRegistration: \"\",\n            // identityIdNr: \"\",\n            // identityType: \"\",\n            // mobileNumber: 999999999,\n            // nextOfKin1Mobilenr: null,\n            // nextOfKin1Name: \"\",\n            // nextOfKin1Relation: \"\",\n            // nextOfKinMobilenr: 999999999,\n            // nextOfKinName: \"Ramu\",\n            // nextOfKinRelation: \"Father\",\n            // patientID: 0,\n            // firstName: \"\",\n            // lastName: \"\",\n            // permanentHomeAddress: \"\",\n            // regDate: \"2022-04-18\"\n\n        }\n        console.log(newPatient);\n\n        // post patient to backend\n        addPatient(\n            newPatient.patientName,\n            // newPatient.age,\n            newPatient.gender,\n            newPatient.patientID,\n            newPatient.createDateTime,\n            // newPatient.date,\n            // newPatient.time,\n            newPatient.address,\n\n            newPatient.emailId,\n\n            newPatient.city,\n            newPatient.stateCountry,\n            newPatient.pincode,\n            newPatient.country,\n            newPatient.status,\n            newPatient.title\n        );\n        resetInputs();\n    };\n\n    // for fuzzy search\n    const [searchData, setSearchData] = useState(patients);\n    const searchItem = (query) => {\n        // console.log(query)\n        if (!query) {\n            setPatients(patients);\n            return;\n        }\n        // query = query.toLowerCase();\n\n        const finalResult = [];\n        patients.forEach((item) => {\n            // console.log(\"in search per patient\")\n            // console.log(item.P_ID)\n            if (\n                item.P_ID.indexOf(query) !== -1\n            ) {\n                finalResult.push(item);\n            }\n        });\n        setPatients(finalResult);\n        // setSearchData(finalResult);\n    };\n\n    return (\n        <SafeAreaView >\n            <Modal\n                animationType=\"fade\"\n                transparent={true}\n                visible={modalVisible}\n            >\n                <View\n                    style={styles.centeredView}\n                >\n                    <Text>Patient Name</Text>\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangeName}\n                        value={name}\n                        placeholder=\"Patient Name\"\n                        keyboardType=\"ascii-capable\"\n                    />\n                    {/* <Text>Age</Text>\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangeAge}\n                        value={age}\n                        placeholder=\"Patient Age\"\n                        keyboardType=\"numeric\"\n                    /> */}\n                    <Text>Gender</Text>\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangeGender}\n                        value={gender}\n                        placeholder=\"Gender\"\n                        keyboardType=\"ascii-capable\"\n                    />\n                    <Text>Patient IP</Text>\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangePatientIp}\n                        value={patientIp}\n                        placeholder=\"Patient IP\"\n                        keyboardType=\"ascii-capable\"\n                    />\n                    <Text>Time of Admission(YYYY-MM-DD)</Text>\n                    <TextInput\n                        style={styles.input}\n                        format=\"DD-MM-YYYY\"\n                        onChangeText={onChangeDate}\n                        value={date}\n                        placeholder=\"Date of Admission(YYYY-MM-DD)\"\n                        keyboardType=\"decimal-pad\"\n                    />\n                    <Text>Time of Admission(HH:MM:SS)</Text>\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={onChangeTime}\n                        value={time}\n                        placeholder=\"Time of Admission\"\n                        keyboardType=\"decimal-pad\"\n                    />\n                    <Pressable>\n                        <Button\n                            title=\"submit\"\n                            style={styles.buttonOpen}\n                            onPress={onSubmit}\n                        >\n                            Register\n                        </Button>\n                    </Pressable>\n\n                </View>\n            </Modal >\n            <View style={styles.container}>\n                <Text>\n                    <Pressable>\n                        <Icon.Button\n                            name=\"plus\"\n                            style={styles.buttonOpen}\n                            onPress={() => setModalVisible(true)}\n                        >\n                            Add New Patient\n                        </Icon.Button>\n                    </Pressable>\n                </Text>\n                <Text>\n                    {/* <Pressable> */}\n                    <Icon.Button\n                        name=\"search\"\n                        style={styles.buttonSearch}\n                    // onPress={() => navigate(\"/Patient_id\")}\n                    // onPress={() =>\n                    //     patientsList()\n                    //     // <TextInput placeholder='Patient ID' />\n                    // }\n                    >\n                        Search Patient\n                    </Icon.Button>\n                    {/* <div className=\"search-container\"> */}\n                    <input\n                        type=\"search\"\n                        onChange={(e) => searchItem(e.target.value)}\n                        placeholder=\"Search Patient By ID\"\n                    />\n                    {/* </div> */}\n                    {/* </Pressable> */}\n                </Text>\n                <TextInput\n                    inlineImageLeft='search_icon'\n                    style={styles.buttonSearch}\n                />\n            </View>\n\n\n            {patients.map((patient) => {\n                return < ReviewDetails key={patient.P_ID} patient={patient} />\n            })\n            }\n        </SafeAreaView >\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingTop: 5,\n        paddingBottom: 5,\n    },\n    centeredView: {\n        flex: 1,\n        margin: 50,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 15,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 5\n        },\n        shadowOpacity: 0.75,\n        shadowRadius: 4,\n        elevation: 15\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n    },\n    buttonOpen: {\n        backgroundColor: \"#56BF9C\",\n    },\n    buttonSearch: {\n        backgroundColor: \"#56BF9C\",\n    },\n    input: {\n        height: 40,\n        margin: 12,\n        borderWidth: 1,\n        padding: 5,\n    }\n});\n\nexport default Maindashboard;\n"]},"metadata":{},"sourceType":"module"}